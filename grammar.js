// for expressions
const PREC = {
  TOP: 20,
  ASSIGNMENT: 15,
  LOGICAL_AND: 14,
  LOGICAL_OR: 13,
  SLICE_PAIR: 12,
  COMPOUND: 13,
  EQUALITY: 11,
  GREATER_LESS: 10,
  BITWISE_OR: 9,
  BITWISE_AND: 8,
  BITWISE_SHIFT: 7,
  ADD_SUB_CAT: 6,
  MULT_DIV: 5,
  EXPONENT: 4,
  NEGATION: 3,
  STRINGIZE: 3,
  NUMERICIZE: 3,
  DEREFERENCE: 3,
  BOX: 3,
  LOGICAL_NOT: 2,
  PARENTHETICAL: 1,
  SUBSCRIPT: 0,
  MEMBER_ACCESS: 0,
  ARRAY: 1,
  PLAIN: -5, //stuff like GetFPS
  DOT: -10, // stuff like quest.variable
  ARGUMENTATIVE: -15, // stuff like GetName object
  LITERAL: -20,
};

module.exports = grammar({
  name: 'obse',

  extras: $ => [
    /\s|\\\r?\n/,
    $.comment,
  ],

  word: $ => $.identifier,

  conflicts: $ => [
    [$._statement, $._operands],
    [$._expression, $.set_statement],
    [$._expression, $.let_statement],
    [$._expression, $._pre_operands],
    [$._paren_expression, $._paren_operands],
    [$._paren_operands, $._expression],
    [$.user_function],
    [$.function],
    [$.condition],
    [$.user_function, $.function],
    [$.function, $._statement],
    [$._operands, $.user_function],
    [$._operands, $._array_key],
    [$.array_variable, $.identifier],
    [$._pre_operands],
    [$.eval],
    [$.testexpr],
    [$.while_loop],
    [$.foreach_loop],
  ],

  rules: {

    script_file: $ => seq(
      field('script_name', $.script_name),
      repeat(field('script_body', $._script_body)),
    ),

    script_name: $ => seq(
      field('declaration', $.script_declarator),
      field('script_name', $.identifier),
    ),
    script_declarator: $ => choice(
      caseInsensitive('scn'),
      caseInsensitive('scriptname'),
    ),

    _script_body: $ => choice(
      field('var_declaration', $.var_declare),
      field('block_mode', $.block),
    ),

    var_declare: $ => seq(
      field('type', $._type),
      field('variable', $.identifier),
    ),
    _type: $ => choice(
      field('type_int', $.int),
      field('type_float', $.float),
      field('type_string', $.string),
      field('type_array', $.array),
      field('type_ref', $.ref),
    ),
    int: $ => choice(
      caseInsensitive('int'),
      caseInsensitive('short'),
      caseInsensitive('long'),
    ),
    ref: $ => caseInsensitive('ref'),
    float: $ => caseInsensitive('float'),
    string: $ => caseInsensitive('string_var'),
    array: $ => caseInsensitive('array_var'),

    block: $ => seq(
      caseInsensitive('begin'),
      field('block_type', $._block_type),
      repeat(field('block_body', $._block_body)),
      caseInsensitive('end'),
    ),
    _block_type: $ => choice(
      $._block_func,
      $.identifier,
    ),
    _block_func: $ => seq(
      $.identifier,
      '{',
      repeat(choice(
        field('argument', $.identifier),
        ',',
      )),
      '}',
    ),

    _block_body: $ => field('statement', $._statement),

    _statement: $ => choice(
      field('function', $.function),
      field('let', $.let_statement),
      field('set', $.set_statement),
      field('if_block', $.conditional),
      field('while', $.while_loop),
      field('foreach', $.foreach_loop),
      prec.right($._expression),
      field('user', $.user_function),
      field('eval', prec.left($.eval)),
      field('testexpr', prec.left($.testexpr)),
    ),

    _expression: $ => choice(
      $._operands,
      $._paren_operands,
      prec.left($.binary_operator),
      $._unary_expr,
      $._paren_expression,
    ),

    _paren_expression: $ => seq(
      '(',
      repeat($._expression),
      ')',
    ),

    _operands: $ => choice(
      field('plain', prec(PREC.PLAIN, $.identifier)),
      field('literal', prec(PREC.LITERAL, $._literal)),
      field('array_var', prec(PREC.ARRAY, $.array_variable)),
      prec(PREC.DOT, $._dot_object),
      field('function', $.function),
      field('user_function', $.user_function),
      field('option', $.opt),
    ),
    _paren_operands: $ => seq(
      '(',
      repeat($._operands),
      ')',
    ),

    _unary_expr: $ => seq(
      $.unary_operator,
      $._expression,
    ),

    binary_operator: $ => choice(
      prec(PREC.ASSIGNMENT, ':='),
      prec(PREC.LOGICAL_OR, '||'),
      prec(PREC.LOGICAL_AND, '&&'),
      prec(PREC.SLICE_PAIR, '::'),
      prec(PREC.EQUALITY, '=='),
      prec(PREC.EQUALITY, '!='),
      prec(PREC.GREATER_LESS, '>'),
      prec(PREC.GREATER_LESS, '>='),
      prec(PREC.GREATER_LESS, '<'),
      prec(PREC.GREATER_LESS, '<='),
      prec(PREC.BITWISE_OR, '|'),
      prec(PREC.BITWISE_AND, '&'),
      prec(PREC.BITWISE_SHIFT, '<<'),
      prec(PREC.BITWISE_SHIFT, '>>'),
      prec(PREC.ADD_SUB_CAT, '+'),
      prec(PREC.ADD_SUB_CAT, '-'),
      prec(PREC.MULT_DIV, '*'),
      prec(PREC.MULT_DIV, '/'),
      prec(PREC.MULT_DIV, '%'),
      prec(PREC.EXPONENT, '^'),
      // prec(PREC.MEMBER_ACCESS, '->'),
    ),

    unary_operator: $ => choice(
      prec(PREC.NEGATION, '-'),
      prec(PREC.STRINGIZE, '$'),
      prec(PREC.NUMERICIZE, '#'),
      prec(PREC.DEREFERENCE, '*'),
      prec(PREC.BOX, '&'),
      prec(PREC.LOGICAL_NOT, '!'),
    ),

    // dot objects
    // dot_object: $ => seq(
    //   field('left', $.identifier),
    //   token.immediate('.'),
    //   field('right', $.identifier),
    // ),
    _dot_object: $ => choice(
      field('quest_var', $.quest_var),
      field('ref_func', $.reference_func),
    ),

    quest_var: $ => seq(
      field('quest', $.identifier),
      '.',
      field('variable', $.identifier),
    ),

    reference_func: $ => seq(
      field('reference', $.identifier),
      '.',
      field('function', $.function),
    ),

    opt: $ => seq(
      ',',
      field('option', prec.right($._operands)),
    ),

    // Array variables
    array_variable: $ => seq(
      field('array', $._array),
      repeat1(field('key', choice($.subscript, prec(PREC.SUBSCRIPT, field('member_access', $.mem_access))))),
    ),
    _array: $ => $.identifier,
    _array_key: $ => choice(
      field('index', prec(PREC.LITERAL, $._literal)),
      field('index', prec(PREC.PLAIN, $._expression)),
      prec(PREC.SLICE_PAIR, field( 'slice', $.slice)),
    ),
    mem_access: $ => seq(
      '->',
      choice(
        field('key', $._literal),
        field('key', $.identifier),
      ),
    ),
    slice: $ => seq(
      choice(/\d+/, /\-\d+/,),
      ':',
      choice(/\d+/, /\-\d+/,),
    ),
    // arrays and strings use this
    subscript: $ => seq(
      '[',
      $._array_key,
      ']',
    ),

    // literals are numbers and double quotes only
    _literal: $ => choice(
      field('integer', $.integer),
      field('float', $.float_num),
      field('string', $.string),
    ),
    string: $ => /".*"/,
    float_num: $ => choice(
      /\-\d+\.\d*/,
      /\d+\.\d*/,
    ),
    integer: $ => choice(
      /\d+/,
      /\-\d+/,
    ),


    eval: $ => seq(
      caseInsensitive('eval'),
      repeat1($._expression),
      optional($._eol),
    ),

    testexpr: $ => seq(
      caseInsensitive('testexpr'),
      repeat1($._expression),
      optional($._eol),
    ),

    set_statement: $ => seq(
      caseInsensitive('set'),
      field('left', $._operands),
      caseInsensitive('to'),
      $._pre_operands,
      $._eol,
    ),
    let_statement: $ => seq(
      caseInsensitive('let'),
      field('left', $._operands),
      $._let_assignment,
      $._pre_operands,
      $._eol,
    ),
    _pre_operands: $ => choice(
      field('right', repeat1($._operands)),
      repeat1($._expression),
    ),

    _let_assignment: $ => choice(
      prec(PREC.ASSIGNMENT, field('assignment', $.assignment)),
      prec(PREC.COMPOUND, field('compound', $.compound_assignment)),
    ),
    assignment: $ => ':=',
    compound_assignment: $ => choice(
      '+=',
      '-=',
      '*=',
      '/=',
      '^=',
    ),

    condition: $ => repeat1($._statement),

    conditional: $ => seq(
      caseInsensitive('if'),
      field('condition', $.condition),
      $._eol,
      repeat($._statement),
      repeat(field('elseif', $.else_if)),
      optional(field('else', $.else)),
      caseInsensitive('endif'),
      $._eol,
    ),

    else: $ => seq(
      caseInsensitive('else'),
      $._eol,
      repeat($._statement),
    ),
    else_if: $ => seq(
      caseInsensitive('elseif'),
      field('condition', $.condition),
      $._eol,
      repeat($._statement),
    ),

    while_loop: $ => seq(
      caseInsensitive('while'),
      field('condition', $.condition),
      $._eol,
      repeat($._statement),
      caseInsensitive('loop'),
      $._eol,
    ),

    foreach_loop: $ => seq(
      caseInsensitive('foreach'),
      choice(
        field('container', prec(PREC.ARRAY, $.array_variable)),
        field('container', prec(PREC.PLAIN, $.identifier)),
      ),
      '<-',
      choice(
        field('source', prec(PREC.ARRAY, $.array_variable)),
        field('source', prec(PREC.PLAIN, $.identifier)),
      ),
      $._eol,
      repeat($._statement),
      caseInsensitive('loop'),
      $._eol,
    ),

    user_function: $ => seq(
      caseInsensitive('Call'),
      field('user_function', $.identifier),
      repeat($._expression),
      optional($._eol),
    ),

    function: $ => seq(
      choice(
        // caseInsensitive("Activate"),
        // caseInsensitive("AddAchievement"),
        // caseInsensitive("AddFlames"),
        // caseInsensitive("AddItem"),
        // caseInsensitive("AddScriptPackage"),
        // caseInsensitive("AddSpell"),
        // caseInsensitive("AddTopic"),
        // caseInsensitive("AdvancePCLevel"),
        // caseInsensitive("AdvancePCSkill"),
        // caseInsensitive("Autosave"),
        // caseInsensitive("CanHaveFlames"),
        // caseInsensitive("CanPayCrimeGold"),
        // caseInsensitive("Cast"),
        // caseInsensitive("ClearOwnership"),
        // caseInsensitive("CloseCurrentOblivionGate"),
        // caseInsensitive("CloseOblivionGate"),
        // caseInsensitive("CompleteQuest"),
        // caseInsensitive("CreateFullActorCopy"),
        // caseInsensitive("DeleteFullActorCopy"),
        // caseInsensitive("Disable"),
        // caseInsensitive("DisableLinkedPathPoints"),
        // caseInsensitive("DisablePlayerControls"),
        // caseInsensitive("Dispel"),
        // caseInsensitive("DispelAllSpells"),
        // caseInsensitive("Drop"),
        // caseInsensitive("DropMe"),
        // caseInsensitive("DuplicateAllItems"),
        // caseInsensitive("DuplicateNPCStats"),
        // caseInsensitive("Enable"),
        // caseInsensitive("EnableFastTravel"),
        // caseInsensitive("EnableLinkedPathPoints"),
        // caseInsensitive("EnablePlayerControls"),
        // caseInsensitive("EquipItem"),
        // caseInsensitive("EssentialDeathReload"),
        // caseInsensitive("EvaluatePackage"),	
        // caseInsensitive("ForceAV"),
        // caseInsensitive("ForceActorValue"),
        // caseInsensitive("ForceCloseOblivionGate"),
        // caseInsensitive("ForceFlee"),
        // caseInsensitive("ForceTakeCover"),
        // caseInsensitive("ForceWeather"),
        // caseInsensitive("GetAV"),
        // caseInsensitive("GetActionRef"),
        // caseInsensitive("GetActorValue"),
        // caseInsensitive("GetAlarmed"),
        // caseInsensitive("GetAmountSoldStolen"),
        // caseInsensitive("GetAngle"),
        // caseInsensitive("GetArmorRating"),
        // caseInsensitive("GetArmorRatingUpperBody"),
        // caseInsensitive("GetAttacked"),
        // caseInsensitive("GetBarterGold"),
        // caseInsensitive("GetBaseAV"),
        // caseInsensitive("GetBaseActorValue"),
        // caseInsensitive("GetButtonPressed"),
        // caseInsensitive("GetClassDefaultMatch"),
        // caseInsensitive("GetClothingValue"),
        // caseInsensitive("GetContainer"),
        // caseInsensitive("GetCrime"),
        // caseInsensitive("GetCrimeGold"),
        // caseInsensitive("GetCrimeKnown"),
        // caseInsensitive("GetCurrentAIPackage"),
        // caseInsensitive("GetCurrentAIProcedure"),
        // caseInsensitive("GetCurrentTime"),
        // caseInsensitive("GetCurrentWeatherPercent"),
        // caseInsensitive("GetDayOfWeek"),
        // caseInsensitive("GetDead"),
        // caseInsensitive("GetDeadCount"),
        // caseInsensitive("GetDestroyed"),
        // caseInsensitive("GetDetected"),
        // caseInsensitive("GetDetectionLevel"),
        // caseInsensitive("GetDisabled"),
        // caseInsensitive("GetDisposition"),
        // caseInsensitive("GetDistance"),
        // caseInsensitive("GetDoorDefaultOpen"),
        // caseInsensitive("GetEquipped"),
        // caseInsensitive("GetFactionRank"),
        // caseInsensitive("GetFactionRankDifference"),
        // caseInsensitive("GetFactionReaction"),
        // caseInsensitive("GetFatiguePercentage"),
        // caseInsensitive("GetForceRun"),
        // caseInsensitive("GetForceSneak"),
        // caseInsensitive("GetFriendHit"),
        // caseInsensitive("GetFurnitureMarkerID"),
        // caseInsensitive("GetGS"),
        // caseInsensitive("GetGameSetting"),
        // caseInsensitive("GetGlobalValue"),
        // caseInsensitive("GetGold"),
        // caseInsensitive("GetHeadingAngle"),
        // caseInsensitive("GetIdleDoneOnce"),
        // caseInsensitive("GetIgnoreFriendlyHits"),
        // caseInsensitive("GetInCell"),
        // caseInsensitive("GetInCellParam"),
        // caseInsensitive("GetInFaction"),
        // caseInsensitive("GetInSameCell"),
        // caseInsensitive("GetInWorldspace"),
        // caseInsensitive("GetInvestmentGold"),
        // caseInsensitive("GetIsAlerted"),
        // caseInsensitive("GetIsClass"),
        // caseInsensitive("GetIsClassDefault"),
        // caseInsensitive("GetIsCreature"),
        // caseInsensitive("GetIsCurrentPackage"),
        // caseInsensitive("GetIsCurrentWeather"),
        // caseInsensitive("GetIsGhost"),
        // caseInsensitive("GetIsID"),
        // caseInsensitive("GetIsPlayableRace"),
        // caseInsensitive("GetIsPlayerBirthsign"),
        // caseInsensitive("GetIsRace"),
        // caseInsensitive("GetIsReference"),
        // caseInsensitive("GetIsSex"),
        // caseInsensitive("GetIsUsedItem"),
        // caseInsensitive("GetIsUsedItemType"),
        // caseInsensitive("GetItemCount"),
        // caseInsensitive("GetKnockedState"),
        // caseInsensitive("GetLOS"),
        // caseInsensitive("GetLevel"),
        // caseInsensitive("GetLockLevel"),
        // caseInsensitive("GetLocked"),
        // caseInsensitive("GetMenuHasTrait"),
        // caseInsensitive("GetName"),
        // caseInsensitive("GetNoRumors"),
        // caseInsensitive("GetOffersServicesNow"),
        // caseInsensitive("GetOpenState"),
        // caseInsensitive("GetPCExpelled"),
        // caseInsensitive("GetPCFactionAttack"),
        // caseInsensitive("GetPCFactionMurder"),
        // caseInsensitive("GetPCFactionSteal"),
        // caseInsensitive("GetPCFactionSubmitAuthority"),
        // caseInsensitive("GetPCFame"),
        // caseInsensitive("GetPCInFaction"),
        // caseInsensitive("GetPCInfamy"),
        // caseInsensitive("GetPCIsClass"),
        // caseInsensitive("GetPCIsRace"),
        // caseInsensitive("GetPCIsSex"),
        // caseInsensitive("GetPCMiscStat"),
        // caseInsensitive("GetPCSleepHours"),
        // caseInsensitive("GetPackageTarget"),
        // caseInsensitive("GetParentRef"),
        // caseInsensitive("GetPersuasionNumber"),
        // caseInsensitive("GetPlayerControlsDisabled"),
        // caseInsensitive("GetPlayerHasLastRiddenHorse"),
        // caseInsensitive("GetPlayerInSEWorld"),
        // caseInsensitive("GetPos"),
        // caseInsensitive("GetQuestRunning"),
        // caseInsensitive("GetQuestVariable"),
        // caseInsensitive("GetRandomPercent"),
        // caseInsensitive("GetRestrained"),
        // caseInsensitive("GetScale"),
        // caseInsensitive("GetScriptVariable"),
        // caseInsensitive("GetSecondsPassed"),
        // caseInsensitive("GetSelf"),
        // caseInsensitive("GetShouldAttack"),
        // caseInsensitive("GetSitting"),
        // caseInsensitive("GetSleeping"),
        // caseInsensitive("GetStage"),
        // caseInsensitive("GetStageDone"),
        // caseInsensitive("GetStartingAngle"),
        // caseInsensitive("GetStartingPos"),
        // caseInsensitive("GetTalkedToPC"),
        // caseInsensitive("GetTalkedToPCParam"),
        // caseInsensitive("GetTimeDead"),
        // caseInsensitive("GetTotalPersuasionNumber"),
        // caseInsensitive("GetTrespassWarningLevel"),
        // caseInsensitive("GetUnconscious"),
        // caseInsensitive("GetUsedItemActivate"),
        // caseInsensitive("GetUsedItemLevel"),
        // caseInsensitive("GetVampire"),
        // caseInsensitive("GetWalkSpeed"),
        // caseInsensitive("GetWeaponAnimType"),
        // caseInsensitive("GetWeaponSkillType"),
        // caseInsensitive("GetWindSpeed"),
        // caseInsensitive("GoToJail"),
        // caseInsensitive("HasFlames"),
        // caseInsensitive("HasMagicEffect"),
        // caseInsensitive("HasVampireFed"),
        // caseInsensitive("IsActionRef"),
        // caseInsensitive("IsActor"),
        // caseInsensitive("IsActorAVictim"),
        // caseInsensitive("IsActorDetected"),
        // caseInsensitive("IsActorEvil"),
        // caseInsensitive("IsActorUsingATorch"),
        // caseInsensitive("IsActorsAIOff"),
        // caseInsensitive("IsAnimPlayer"),
        // caseInsensitive("IsCellOwner"),
        // caseInsensitive("IsCloudy"),
        // caseInsensitive("IsContinuingPackagePCNear"),
        // caseInsensitive("IsCurrentFurnitureObj"),
        // caseInsensitive("IsCurrentFurnitureRef"),
        // caseInsensitive("IsEssential"),
        // caseInsensitive("IsFacingUp"),
        // caseInsensitive("IsGuard"),
        // caseInsensitive("IsHorseStolen"),
        // caseInsensitive("IsIdlePlaying"),
        // caseInsensitive("IsInCombat"),
        // caseInsensitive("IsInDangerousWater"),
        // caseInsensitive("IsInInterior"),
        // caseInsensitive("IsInMyOwnedCell"),
        // caseInsensitive("IsLeftUp"),
        // caseInsensitive("IsOwner"),
        // caseInsensitive("IsPCAMurderer"),
        // caseInsensitive("IsPCSleeping"),
        // caseInsensitive("IsPlayerInJail"),
        // caseInsensitive("IsPlayerMovingIntoNewSpace"),
        // caseInsensitive("IsPlayersLastRiddenHorse"),
        // caseInsensitive("IsPleasant"),
        // caseInsensitive("IsRaining"),
        // caseInsensitive("IsRidingHorse"),
        // caseInsensitive("IsRunning"),
        // caseInsensitive("IsShieldOut"),
        // caseInsensitive("IsSneaking"),
        // caseInsensitive("IsSnowing"),
        // caseInsensitive("IsSpellTarget"),
        // caseInsensitive("IsSwimming"),
        // caseInsensitive("IsTalking"),
        // caseInsensitive("IsTimePassing"),
        // caseInsensitive("IsTorchOut"),
        // caseInsensitive("IsTrespassing"),
        // caseInsensitive("IsTurnArrest"),
        // caseInsensitive("IsWaiting"),
        // caseInsensitive("IsWeaponOut"),
        // caseInsensitive("IsXBox"),
        // caseInsensitive("IsYielding"),
        // caseInsensitive("Kill"),
        // caseInsensitive("KillActor"),
        // caseInsensitive("KillAllActors"),
        // caseInsensitive("Lock"),
        // caseInsensitive("Look"),
        // caseInsensitive("LoopGroup"),
        // caseInsensitive("Message"),
        // caseInsensitive("MessageBox"),
        // caseInsensitive("ModAV"),
        // caseInsensitive("ModActorValue"),
        // caseInsensitive("ModAmountSoldStolen"),
        // caseInsensitive("ModBarterGold"),
        // caseInsensitive("ModCrimeGold"),
        // caseInsensitive("ModDisposition"),
        // caseInsensitive("ModFactionRank"),
        // caseInsensitive("ModFactionReaction"),
        // caseInsensitive("ModPCAttribute"),
        // caseInsensitive("ModPCFame"),
        // caseInsensitive("ModPCInfamy"),
        // caseInsensitive("ModPCMiscStat"),
        // caseInsensitive("ModPCSkill"),
        // caseInsensitive("ModScale"),
        // caseInsensitive("MoveTo"),
        // caseInsensitive("MoveToMarker"),
        // caseInsensitive("PCB"),
        // caseInsensitive("PayFine"),
        // caseInsensitive("PayFineThief"),
        // caseInsensitive("PickIdle"),
        // caseInsensitive("PlaceAtMe"),
        // caseInsensitive("PlayBink"),
        // caseInsensitive("PlayGroup"),
        // caseInsensitive("PlayMagicEffectVisuals"),
        // caseInsensitive("PlayMagicShaderVisuals"),
        // caseInsensitive("PlaySound"),
        // caseInsensitive("PlaySound3D"),
        // caseInsensitive("PositionCell"),
        // caseInsensitive("PositionWorld"),
        // caseInsensitive("PreloadMagicEffect"),
        // caseInsensitive("PurgeCellBuffers"),
        // caseInsensitive("PushActorAway"),
        // caseInsensitive("RefreshTopicList"),
        // caseInsensitive("ReleaseWeatherOverride"),
        // caseInsensitive("RemoveAllItems"),
        // caseInsensitive("RemoveFlames"),
        // caseInsensitive("RemoveItem"),
        // caseInsensitive("RemoveMe"),
        // caseInsensitive("RemoveScriptPackage"),
        // caseInsensitive("RemoveSpell"),
        // caseInsensitive("Reset3DState"),
        // caseInsensitive("ResetFallDamageTimer"),
        // caseInsensitive("ResetHealth"),
        // caseInsensitive("ResetInterior"),
        // caseInsensitive("Resurrect"),
        // caseInsensitive("Rotate"),
        // caseInsensitive("SCAOnActor"),
        // caseInsensitive("SameFaction"),
        // caseInsensitive("SameFactionAsPC"),
        // caseInsensitive("SameRace"),
        // caseInsensitive("SameRaceAsPC"),
        // caseInsensitive("SameSex"),
        // caseInsensitive("SameSexAsPC"),
        // caseInsensitive("Say"),
        // caseInsensitive("SayTo"),
        // caseInsensitive("ScriptEffectElapsedSeconds"),
        // caseInsensitive("SelectPlayerSpell"),
        // caseInsensitive("SendTrespassAlarm"),
        // caseInsensitive("SetAV"),
        // caseInsensitive("SetActorAlpha"),
        // caseInsensitive("SetActorFullName"),
        // caseInsensitive("SetActorRefraction"),
        // caseInsensitive("SetActorValue"),
        // caseInsensitive("SetActorsAI"),
        // caseInsensitive("SetAlert"),
        // caseInsensitive("SetAllReachable"),
        // caseInsensitive("SetAllVisible"),
        // caseInsensitive("SetAngle"),
        // caseInsensitive("SetAtStart"),
        // caseInsensitive("SetBarterGold"),
        // caseInsensitive("SetCellFullName"),
        // caseInsensitive("SetCellOwnership"),
        // caseInsensitive("SetCellPublicFlag"),
        // caseInsensitive("SetClass"),
        // caseInsensitive("SetCrimeGold"),
        // caseInsensitive("SetDestroyed"),
        // caseInsensitive("SetDoorDefaultOpen"),
        // caseInsensitive("SetEssential"),
        // caseInsensitive("SetFactionRank"),
        // caseInsensitive("SetFactionReaction"),
        // caseInsensitive("SetForceRun"),
        // caseInsensitive("SetForceSneak"),
        // caseInsensitive("SetGhost"),
        // caseInsensitive("SetIgnoreFriendlyHits"),
        // caseInsensitive("SetInCharGen"),
        // caseInsensitive("SetInvestmentGold"),
        // caseInsensitive("SetItemValue"),
        // caseInsensitive("SetLevel"),
        // caseInsensitive("SetNoAvoidance"),
        // caseInsensitive("SetNoRumors"),
        // caseInsensitive("SetOpenState"),
        // caseInsensitive("SetOwnership"),
        // caseInsensitive("SetPCExpelled"),
        // caseInsensitive("SetPCFactionAttack"),
        // caseInsensitive("SetPCFactionMurder"),
        // caseInsensitive("SetPCFactionSteal"),
        // caseInsensitive("SetPCFactionSubmitAuthority"),
        // caseInsensitive("SetPCFame"),
        // caseInsensitive("SetPCInfamy"),
        // caseInsensitive("SetPCSleepHours"),
        // caseInsensitive("SetPackDuration"),
        // caseInsensitive("SetPlayerBirthsign"),
        // caseInsensitive("SetPlayerInSEWorld"),
        // caseInsensitive("SetPos"),
        // caseInsensitive("SetQuestObject"),
        // caseInsensitive("SetRestrained"),
        // caseInsensitive("SetRigidBodyMass"),
        // caseInsensitive("SetScale"),
        // caseInsensitive("SetSceneIsComplex"),
        // caseInsensitive("SetShowQuestItems"),
        // caseInsensitive("SetSize"),
        // caseInsensitive("SetStage"),
        // caseInsensitive("SetUnconscious"),
        // caseInsensitive("SetWeather"),
        // caseInsensitive("ShowBirthsignMenu"),
        // caseInsensitive("ShowClassMenu"),
        // caseInsensitive("ShowDialogSubtitles"),
        // caseInsensitive("ShowEnchantment"),
        // caseInsensitive("ShowMap"),
        // caseInsensitive("ShowRaceMenu"),
        // caseInsensitive("ShowSpellMaking"),
        // caseInsensitive("SkipAnim"),
        // caseInsensitive("StartCombat"),
        // caseInsensitive("StartConversation"),
        // caseInsensitive("StartQuest"),
        // caseInsensitive("StopCombat"),
        // caseInsensitive("StopCombatAlarmOnActor"),
        // caseInsensitive("StopLook"),
        // caseInsensitive("StopMagicEffectVisuals"),
        // caseInsensitive("StopMagicShaderVisuals"),
        // caseInsensitive("StopQuest"),
        // caseInsensitive("StopWaiting"),
        // caseInsensitive("StreamMusic"),
        // caseInsensitive("This"),
        // caseInsensitive("ToggleActorsAI"),
        // caseInsensitive("TrapUpdate"),
        // caseInsensitive("TriggerHitShader"),
        // caseInsensitive("UnequipItem"),
        // caseInsensitive("Unlock"),
        // caseInsensitive("VampireFeed"),
        // caseInsensitive("Wait"),
        // caseInsensitive("WakeUpPC"),
        // caseInsensitive("WhichServiceMenu"),
        // caseInsensitive("Yield"),
        // caseInsensitive("evp"),
        // caseInsensitive("pms"),
        // caseInsensitive("saa"),
        // caseInsensitive("sms"),
        // caseInsensitive("ACos"),
        // caseInsensitive("AHammerKey"),
        // caseInsensitive("ASin"),
        // caseInsensitive("ATan"),
        // caseInsensitive("ATan2"),
        // caseInsensitive("AVString"),
        // caseInsensitive("Abs"),
        // caseInsensitive("Activate2"),
        // caseInsensitive("ActorValueToCode"),
        // caseInsensitive("ActorValueToString"),
        // caseInsensitive("ActorValueToStringC"),
        // caseInsensitive("AddEffectItem"),
        // caseInsensitive("AddEffectItemC"),
        // caseInsensitive("AddFullEffectItem"),
        // caseInsensitive("AddFullEffectItemC"),
        // caseInsensitive("AddItemNS"),
        // caseInsensitive("AddMagicEffectCounter"),
        // caseInsensitive("AddMagicEffectCounterC"),
        // caseInsensitive("AddSpellNS"),
        // caseInsensitive("AddToLeveledList"),
        // caseInsensitive("AnimPathIncludes"),
        // caseInsensitive("AppendToName"),
        // caseInsensitive("AsciiToChar"),
        // caseInsensitive("CalcLevItemNR"),
        // caseInsensitive("CalcLevItems"),
        // caseInsensitive("CalcLeveledItem"),
        // caseInsensitive("Call"),
        // caseInsensitive("CanCastPower"),
        // caseInsensitive("CanCorpseCheck"),
        // caseInsensitive("CanFastTravelFromWorld"),
        // caseInsensitive("CanTravelToMapMarker"),
        // caseInsensitive("Ceil"),
        // caseInsensitive("CharToAscii"),
        // caseInsensitive("ClearActiveQuest"),
        // caseInsensitive("ClearHotKey"),
        // caseInsensitive("ClearLeveledList"),
        // caseInsensitive("ClearOwnershipT"),
        // caseInsensitive("ClearPlayersLastRiddenHorse"),
        // caseInsensitive("ClickMenuButton"),
        // caseInsensitive("CloneForm"),
        // caseInsensitive("CloseAllMenus"),
        // caseInsensitive("CloseTextInput"),
        // caseInsensitive("ColVec"),
        // caseInsensitive("CompareFemaleBipedPath"),
        // caseInsensitive("CompareFemaleGroundPath"),
        // caseInsensitive("CompareFemaleIconPath"),
        // caseInsensitive("CompareIconPath"),
        // caseInsensitive("CompareMaleBipedPath"),
        // caseInsensitive("CompareMaleGroundPath"),
        // caseInsensitive("CompareMaleIconPath"),
        // caseInsensitive("CompareModelPath"),
        // caseInsensitive("CompareName"),
        // caseInsensitive("CompareNames"),
        // caseInsensitive("CompareScripts"),
        // caseInsensitive("Con_CAL"),
        // caseInsensitive("Con_GetINISetting"),
        // caseInsensitive("Con_HairTint"),
        // caseInsensitive("Con_LoadGame"),
        // caseInsensitive("Con_ModWaterShader"),
        // caseInsensitive("Con_PlayerSpellBook"),
        // caseInsensitive("Con_QuitGame"),
        // caseInsensitive("Con_RefreshINI"),
        // caseInsensitive("Con_RunMemoryPass"),
        // caseInsensitive("Con_Save"),
        // caseInsensitive("Con_SaveINI"),
        // caseInsensitive("Con_SetCameraFOV"),
        // caseInsensitive("Con_SetClipDist"),
        // caseInsensitive("Con_SetFog"),
        // caseInsensitive("Con_SetGameSetting"),
        // caseInsensitive("Con_SetGamma"),
        // caseInsensitive("Con_SetHDRParam"),
        // caseInsensitive("Con_SetINISetting"),
        // caseInsensitive("Con_SetImageSpaceGlow"),
        // caseInsensitive("Con_SetSkyParam"),
        // caseInsensitive("Con_SetTargetRefraction"),
        // caseInsensitive("Con_SetTargetRefractionFire"),
        // caseInsensitive("Con_SexChange"),
        // caseInsensitive("Con_TCL"),
        // caseInsensitive("Con_TFC"),
        // caseInsensitive("Con_TGM"),
        // caseInsensitive("Con_ToggleAI"),
        // caseInsensitive("Con_ToggleCombatAI"),
        // caseInsensitive("Con_ToggleDetection"),
        // caseInsensitive("Con_ToggleMapMarkers"),
        // caseInsensitive("Con_ToggleMenus"),
        // caseInsensitive("Con_WaterDeepColor"),
        // caseInsensitive("Con_WaterReflectionColor"),
        // caseInsensitive("Con_WaterShallowColor"),
        // caseInsensitive("CopyAllEffectItems"),
        // caseInsensitive("CopyEyes"),
        // caseInsensitive("CopyFemaleBipedPath"),
        // caseInsensitive("CopyFemaleGroundPath"),
        // caseInsensitive("CopyFemaleIconPath"),
        // caseInsensitive("CopyHair"),
        // caseInsensitive("CopyIR"),
        // caseInsensitive("CopyIconPath"),
        // caseInsensitive("CopyMaleBipedPath"),
        // caseInsensitive("CopyMaleGroundPath"),
        // caseInsensitive("CopyMaleIconPath"),
        // caseInsensitive("CopyModelPath"),
        // caseInsensitive("CopyName"),
        // caseInsensitive("CopyNthEffectItem"),
        // caseInsensitive("Cos"),
        // caseInsensitive("Cosh"),
        // caseInsensitive("CreateTempRef"),
        // caseInsensitive("CreatureHasNoHead"),
        // caseInsensitive("CreatureHasNoLeftArm"),
        // caseInsensitive("CreatureHasNoMovement"),
        // caseInsensitive("CreatureHasNoRightArm"),
        // caseInsensitive("CreatureNoCombatInWater"),
        // caseInsensitive("CreatureUsesWeaponAndShield"),
        // caseInsensitive("DACos"),
        // caseInsensitive("DASin"),
        // caseInsensitive("DATan"),
        // caseInsensitive("DATan2"),
        // caseInsensitive("DCos"),
        // caseInsensitive("DCosh"),
        // caseInsensitive("DSin"),
        // caseInsensitive("DSinh"),
        // caseInsensitive("DTan"),
        // caseInsensitive("DTanh"),
        // caseInsensitive("DebugPrint"),
        // caseInsensitive("DeleteFromInputText"),
        // caseInsensitive("DeleteReference"),
        // caseInsensitive("DisableControl"),
        // caseInsensitive("DisableKey"),
        // caseInsensitive("DisableMouse"),
        // caseInsensitive("DispelNthAE"),
        // caseInsensitive("DispelNthActiveEffect"),
        // caseInsensitive("EnableControl"),
        // caseInsensitive("EnableKey"),
        // caseInsensitive("EnableMouse"),
        // caseInsensitive("EquipItem2"),
        // caseInsensitive("EquipItem2NS"),
        // caseInsensitive("EquipItemNS"),
        // caseInsensitive("EquipItemSilent"),
        // caseInsensitive("EquipMe"),
        // caseInsensitive("EventHandlerExist"),
        // caseInsensitive("Exp"),
        // caseInsensitive("FactionHasSpecialCombat"),
        caseInsensitive("FileExists"),
        // caseInsensitive("Floor"),
        // caseInsensitive("Fmod"),
        // caseInsensitive("ForceColumnVector"),
        // caseInsensitive("ForceRowVector"),
        // caseInsensitive("GenerateIdentityMatrix"),
        // caseInsensitive("GenerateRotationMatrix"),
        // caseInsensitive("GenerateZeroMatrix"),
        // caseInsensitive("GetAPBowEnch"),
        // caseInsensitive("GetAPEnch"),
        // caseInsensitive("GetAPPoison"),
        // caseInsensitive("GetAVC"),
        // caseInsensitive("GetAVForBaseActor"),
        // caseInsensitive("GetAVForBaseActorC"),
        // caseInsensitive("GetAVMod"),
        // caseInsensitive("GetAVModC"),
        // caseInsensitive("GetActiveEffectCasters"),
        // caseInsensitive("GetActiveEffectCodes"),
        // caseInsensitive("GetActiveEffectCount"),
        // caseInsensitive("GetActiveMenuComponentID"),
        // caseInsensitive("GetActiveMenuFilter"),
        // caseInsensitive("GetActiveMenuMode"),
        // caseInsensitive("GetActiveMenuObject"),
        // caseInsensitive("GetActiveMenuRef"),
        // caseInsensitive("GetActiveMenuSelection"),
        // caseInsensitive("GetActiveQuest"),
        // caseInsensitive("GetActiveUIComponentFullName"),
        // caseInsensitive("GetActiveUIComponentID"),
        // caseInsensitive("GetActiveUIComponentNAme"),
        // caseInsensitive("GetActorAlpha"),
        // caseInsensitive("GetActorBaseLevel"),
        // caseInsensitive("GetActorLightAmount"),
        // caseInsensitive("GetActorMaxLevel"),
        // caseInsensitive("GetActorMinLevel"),
        // caseInsensitive("GetActorPackages"),
        // caseInsensitive("GetActorSoulLevel"),
        // caseInsensitive("GetActorValueC"),
        // caseInsensitive("GetAlchMenuApparatus"),
        // caseInsensitive("GetAlchMenuIngredient"),
        // caseInsensitive("GetAlchMenuIngredientCount"),
        // caseInsensitive("GetAllModLocalData"),
        // caseInsensitive("GetAllies"),
        // caseInsensitive("GetAltControl"),
        // caseInsensitive("GetAltControl2"),
        // caseInsensitive("GetApparatusType"),
        // caseInsensitive("GetArmorAR"),
        // caseInsensitive("GetArmorType"),
        // caseInsensitive("GetArrayVariable"),
        // caseInsensitive("GetArrowProjectileBowEnchantment"),
        // caseInsensitive("GetArrowProjectileEnchantment"),
        // caseInsensitive("GetArrowProjectilePoison"),
        // caseInsensitive("GetAttackDamage"),
        // caseInsensitive("GetBarterItem"),
        // caseInsensitive("GetBarterItemQuantity"),
        // caseInsensitive("GetBaseAV2"),
        // caseInsensitive("GetBaseAV2C"),
        // caseInsensitive("GetBaseAV3"),
        // caseInsensitive("GetBaseAV3C"),
        // caseInsensitive("GetBaseActorValueC"),
        // caseInsensitive("GetBaseItems"),
        // caseInsensitive("GetBaseObject"),
        // caseInsensitive("GetBipedIconPath"),
        // caseInsensitive("GetBipedModelPath"),
        // caseInsensitive("GetBipedSlotMask"),
        // caseInsensitive("GetBirthsignSpells"),
        // caseInsensitive("GetBookCantBeTaken"),
        // caseInsensitive("GetBookIsScroll"),
        // caseInsensitive("GetBookLength"),
        // caseInsensitive("GetBookSkillTaught"),
        // caseInsensitive("GetBookText"),
        // caseInsensitive("GetBoundingBox"),
        // caseInsensitive("GetBoundingRadius"),
        // caseInsensitive("GetCalcAllLevels"),
        // caseInsensitive("GetCalcEachInCount"),
        // caseInsensitive("GetCallingScript"),
        // caseInsensitive("GetCellBehavesAsExterior"),
        // caseInsensitive("GetCellChanged"),
        // caseInsensitive("GetCellClimate"),
        // caseInsensitive("GetCellDetachTime"),
        // caseInsensitive("GetCellFactionRank"),
        // caseInsensitive("GetCellLighting"),
        // caseInsensitive("GetCellMusicType"),
        // caseInsensitive("GetCellNorthRotation"),
        // caseInsensitive("GetCellResetHours"),
        // caseInsensitive("GetCellWaterType"),
        // caseInsensitive("GetChanceNone"),
        // caseInsensitive("GetClass"),
        // caseInsensitive("GetClassAttribute"),
        // caseInsensitive("GetClassMenuHighlightedClass"),
        // caseInsensitive("GetClassMenuSelectedClass"),
        // caseInsensitive("GetClassSkill"),
        // caseInsensitive("GetClassSkills"),
        // caseInsensitive("GetClassSpecialization"),
        // caseInsensitive("GetClimateHasMasser"),
        // caseInsensitive("GetClimateHasSecunda"),
        // caseInsensitive("GetClimateMoonPhaseLength"),
        // caseInsensitive("GetClimateSunriseBegin"),
        // caseInsensitive("GetClimateSunriseEnd"),
        // caseInsensitive("GetClimateSunsetBegin"),
        // caseInsensitive("GetClimateSunsetEnd"),
        // caseInsensitive("GetClimateVolatility"),
        // caseInsensitive("GetCloseSound"),
        // caseInsensitive("GetCloudSpeedLower"),
        // caseInsensitive("GetCloudSpeedUpper"),
        // caseInsensitive("GetCombatSpells"),
        // caseInsensitive("GetCombatStyle"),
        // caseInsensitive("GetCombatStyleAcrobaticsDodgeChance"),
        // caseInsensitive("GetCombatStyleAttackChance"),
        // caseInsensitive("GetCombatStyleAttackDuringBlockMult"),
        // caseInsensitive("GetCombatStyleAttackNotUnderAttackMult"),
        // caseInsensitive("GetCombatStyleAttackSkillModBase"),
        // caseInsensitive("GetCombatStyleAttackSkillModMult"),
        // caseInsensitive("GetCombatStyleAttackUnderAttackMult"),
        // caseInsensitive("GetCombatStyleBlockChance"),
        // caseInsensitive("GetCombatStyleBlockNotUnderAttackMult"),
        // caseInsensitive("GetCombatStyleBlockSkillModBase"),
        // caseInsensitive("GetCombatStyleBlockSkillModMult"),
        // caseInsensitive("GetCombatStyleBlockUnderAttackMult"),
        // caseInsensitive("GetCombatStyleBuffStandoffDist"),
        // caseInsensitive("GetCombatStyleDodgeBackNotUnderAttackMult"),
        // caseInsensitive("GetCombatStyleDodgeBackTimerMax"),
        // caseInsensitive("GetCombatStyleDodgeBackTimerMin"),
        // caseInsensitive("GetCombatStyleDodgeBackUnderAttackMult"),
        // caseInsensitive("GetCombatStyleDodgeChance"),
        // caseInsensitive("GetCombatStyleDodgeFWAttackingMult"),
        // caseInsensitive("GetCombatStyleDodgeFWNotAttackingMult"),
        // caseInsensitive("GetCombatStyleDodgeFWTimerMax"),
        // caseInsensitive("GetCombatStyleDodgeFWTimerMin"),
        // caseInsensitive("GetCombatStyleDodgeFatigueModBase"),
        // caseInsensitive("GetCombatStyleDodgeFatigueModMult"),
        // caseInsensitive("GetCombatStyleDodgeLRChance"),
        // caseInsensitive("GetCombatStyleDodgeLRTimerMax"),
        // caseInsensitive("GetCombatStyleDodgeLRTimerMin"),
        // caseInsensitive("GetCombatStyleDodgeNotUnderAttackMult"),
        // caseInsensitive("GetCombatStyleDodgeUnderAttackMult"),
        // caseInsensitive("GetCombatStyleEncumberedSpeedModBase"),
        // caseInsensitive("GetCombatStyleEncumberedSpeedModMult"),
        // caseInsensitive("GetCombatStyleFleeingDisabled"),
        // caseInsensitive("GetCombatStyleGroupStandoffDist"),
        // caseInsensitive("GetCombatStyleH2HBonusToAttack"),
        // caseInsensitive("GetCombatStyleHoldTimerMax"),
        // caseInsensitive("GetCombatStyleHoldTimerMin"),
        // caseInsensitive("GetCombatStyleIdleTimerMax"),
        // caseInsensitive("GetCombatStyleIdleTimerMin"),
        // caseInsensitive("GetCombatStyleIgnoreAlliesInArea"),
        // caseInsensitive("GetCombatStyleKOBonusToAttack"),
        // caseInsensitive("GetCombatStyleKOBonusToPowerAttack"),
        // caseInsensitive("GetCombatStyleMeleeAlertOK"),
        // caseInsensitive("GetCombatStylePowerAttackChance"),
        // caseInsensitive("GetCombatStylePowerAttackFatigueModBase"),
        // caseInsensitive("GetCombatStylePowerAttackFatigueModMult"),
        // caseInsensitive("GetCombatStylePrefersRanged"),
        // caseInsensitive("GetCombatStyleRangeMaxMult"),
        // caseInsensitive("GetCombatStyleRangeOptimalMult"),
        // caseInsensitive("GetCombatStyleRangedStandoffDist"),
        // caseInsensitive("GetCombatStyleRejectsYields"),
        // caseInsensitive("GetCombatStyleRushAttackChance"),
        // caseInsensitive("GetCombatStyleRushAttackDistMult"),
        // caseInsensitive("GetCombatStyleStaggerBonusToAttack"),
        // caseInsensitive("GetCombatStyleStaggerBonusToPowerAttack"),
        // caseInsensitive("GetCombatStyleSwitchDistMelee"),
        // caseInsensitive("GetCombatStyleSwitchDistRanged"),
        // caseInsensitive("GetCombatStyleWillYield"),
        // caseInsensitive("GetCombatTarget"),
        // caseInsensitive("GetCompletedQuests"),
        // caseInsensitive("GetContainerMenuView"),
        // caseInsensitive("GetContainerRespawns"),
        // caseInsensitive("GetControl"),
        // caseInsensitive("GetCreatureBaseScale"),
        // caseInsensitive("GetCreatureCombatSkill"),
        // caseInsensitive("GetCreatureFlies"),
        // caseInsensitive("GetCreatureMagicSkill"),
        // caseInsensitive("GetCreatureModelPaths"),
        // caseInsensitive("GetCreatureReach"),
        // caseInsensitive("GetCreatureSoulLevel"),
        // caseInsensitive("GetCreatureSound"),
        // caseInsensitive("GetCreatureSoundBase"),
        // caseInsensitive("GetCreatureStealthSkill"),
        // caseInsensitive("GetCreatureSwims"),
        // caseInsensitive("GetCreatureType"),
        // caseInsensitive("GetCreatureWalks"),
        // caseInsensitive("GetCrosshairRef"),
        // caseInsensitive("GetCurrentCharge"),
        // caseInsensitive("GetCurrentClimateID"),
        // caseInsensitive("GetCurrentEditorPackage"),
        // caseInsensitive("GetCurrentEventName"),
        // caseInsensitive("GetCurrentHealth"),
        // caseInsensitive("GetCurrentPackage"),
        // caseInsensitive("GetCurrentPackageProcedure"),
        // caseInsensitive("GetCurrentQuests"),
        // caseInsensitive("GetCurrentRegion"),
        // caseInsensitive("GetCurrentRegions"),
        // caseInsensitive("GetCurrentScript"),
        // caseInsensitive("GetCurrentSoulLevel"),
        // caseInsensitive("GetCurrentWeatherID"),
        // caseInsensitive("GetCursorPos"),
        // caseInsensitive("GetDebugSelection"),
        // caseInsensitive("GetDescription"),
        // caseInsensitive("GetDoorTeleportRot"),
        // caseInsensitive("GetDoorTeleportX"),
        // caseInsensitive("GetDoorTeleportY"),
        // caseInsensitive("GetDoorTeleportZ"),
        // caseInsensitive("GetEditorID"),
        // caseInsensitive("GetEditorSize"),
        // caseInsensitive("GetEnchMenuBaseItem"),
        // caseInsensitive("GetEnchMenuEnchItem"),
        // caseInsensitive("GetEnchMenuSoulgem"),
        // caseInsensitive("GetEnchantment"),
        // caseInsensitive("GetEnchantmentCharge"),
        // caseInsensitive("GetEnchantmentCost"),
        // caseInsensitive("GetEnchantmentType"),
        // caseInsensitive("GetEquipmentSlot"),
        // caseInsensitive("GetEquipmentSlotMask"),
        // caseInsensitive("GetEquippedCurrentCharge"),
        // caseInsensitive("GetEquippedCurrentHealth"),
        // caseInsensitive("GetEquippedItems"),
        // caseInsensitive("GetEquippedObject"),
        // caseInsensitive("GetEquippedTorchTimeLeft"),
        // caseInsensitive("GetEquippedWeaponPoison"),
        // caseInsensitive("GetEyes"),
        // caseInsensitive("GetFPS"),
        // caseInsensitive("GetFallTimer"),
        // caseInsensitive("GetFirstRef"),
        // caseInsensitive("GetFirstRefInCell"),
        // caseInsensitive("GetFogDayFar"),
        // caseInsensitive("GetFogDayNear"),
        // caseInsensitive("GetFogNightFar"),
        // caseInsensitive("GetFogNightNear"),
        // caseInsensitive("GetFollowers"),
        // caseInsensitive("GetFormFromMod"),
        // caseInsensitive("GetFormIDString"),
        // caseInsensitive("GetFullGoldValue"),
        // caseInsensitive("GetGameDifficulty"),
        // caseInsensitive("GetGameLoaded"),
        // caseInsensitive("GetGameRestarted"),
        // caseInsensitive("GetGodMode"),
        // caseInsensitive("GetGoldValue"),
        // caseInsensitive("GetGridsToLoad"),
        // caseInsensitive("GetHDRValue"),
        // caseInsensitive("GetHair"),
        // caseInsensitive("GetHairColor"),
        // caseInsensitive("GetHidesAmulet"),
        // caseInsensitive("GetHidesRings"),
        // caseInsensitive("GetHighActors"),
        // caseInsensitive("GetHorse"),
        // caseInsensitive("GetHotKeyItem"),
        // caseInsensitive("GetIconPath"),
        // caseInsensitive("GetIgnoresResistance"),
        // caseInsensitive("GetIngredient"),
        // caseInsensitive("GetIngredientChance"),
        // caseInsensitive("GetInputText"),
        // caseInsensitive("GetInvRefsForItem"),
        // caseInsensitive("GetInventoryObject"),
        // caseInsensitive("GetItems"),
        // caseInsensitive("GetKeyName"),
        // caseInsensitive("GetKeyPress"),
        // caseInsensitive("GetLastCreatedPotion"),
        // caseInsensitive("GetLastCreatedSpell"),
        // caseInsensitive("GetLastEnchantedItem"),
        // caseInsensitive("GetLastSigilStoneCreatedItem"),
        // caseInsensitive("GetLastSigilStoneEnchantedItem"),
        // caseInsensitive("GetLastTransactionItem"),
        // caseInsensitive("GetLastTransactionQuantity"),
        // caseInsensitive("GetLastUniqueCreatedPotion"),
        // caseInsensitive("GetLastUsedSigilStone"),
        // caseInsensitive("GetLevItemByLevel"),
        // caseInsensitive("GetLevItemIndexByForm"),
        // caseInsensitive("GetLevItemIndexByLevel"),
        // caseInsensitive("GetLeveledSpells"),
        // caseInsensitive("GetLightDuration"),
        // caseInsensitive("GetLightRGB"),
        // caseInsensitive("GetLightRadius"),
        // caseInsensitive("GetLightningFrequency"),
        // caseInsensitive("GetLinkedDoor"),
        // caseInsensitive("GetLocalGravity"),
        // caseInsensitive("GetLoopSound"),
        // caseInsensitive("GetLowActors"),
        // caseInsensitive("GetLuckModifiedSkill"),
        // caseInsensitive("GetMEBaseCost"),
        // caseInsensitive("GetMEBaseCostC"),
        // caseInsensitive("GetMEEBarter"),
        // caseInsensitive("GetMEEBarterC"),
        // caseInsensitive("GetMEEnchant"),
        // caseInsensitive("GetMEEnchantC"),
        // caseInsensitive("GetMEOtherActorValue"),
        // caseInsensitive("GetMEOtherActorValueC"),
        // caseInsensitive("GetMEProjSpeed"),
        // caseInsensitive("GetMEProjSpeedC"),
        // caseInsensitive("GetMESchool"),
        // caseInsensitive("GetMESchoolC"),
        // caseInsensitive("GetMEUsedObject"),
        // caseInsensitive("GetMIEffectCount"),
        // caseInsensitive("GetMIType"),
        // caseInsensitive("GetMPSpell"),
        // caseInsensitive("GetMagicEffectAreaSound"),
        // caseInsensitive("GetMagicEffectAreaSoundC"),
        // caseInsensitive("GetMagicEffectBarterFactor"),
        // caseInsensitive("GetMagicEffectBarterFactorC"),
        // caseInsensitive("GetMagicEffectBaseCost"),
        // caseInsensitive("GetMagicEffectBaseCostC"),
        // caseInsensitive("GetMagicEffectBoltSound"),
        // caseInsensitive("GetMagicEffectBoltSoundC"),
        // caseInsensitive("GetMagicEffectCastingSound"),
        // caseInsensitive("GetMagicEffectCastingSoundC"),
        // caseInsensitive("GetMagicEffectChars"),
        // caseInsensitive("GetMagicEffectCharsC"),
        // caseInsensitive("GetMagicEffectCode"),
        // caseInsensitive("GetMagicEffectCounters"),
        // caseInsensitive("GetMagicEffectCountersC"),
        // caseInsensitive("GetMagicEffectEnchantFactor"),
        // caseInsensitive("GetMagicEffectEnchantFactorC"),
        // caseInsensitive("GetMagicEffectEnchantShader"),
        // caseInsensitive("GetMagicEffectEnchantShaderC"),
        // caseInsensitive("GetMagicEffectHitShader"),
        // caseInsensitive("GetMagicEffectHitShaderC"),
        // caseInsensitive("GetMagicEffectHitSound"),
        // caseInsensitive("GetMagicEffectHitSoundC"),
        // caseInsensitive("GetMagicEffectIcon"),
        // caseInsensitive("GetMagicEffectIconC"),
        // caseInsensitive("GetMagicEffectLight"),
        // caseInsensitive("GetMagicEffectLightC"),
        // caseInsensitive("GetMagicEffectModel"),
        // caseInsensitive("GetMagicEffectModelC"),
        // caseInsensitive("GetMagicEffectName"),
        // caseInsensitive("GetMagicEffectNameC"),
        // caseInsensitive("GetMagicEffectNumCounters"),
        // caseInsensitive("GetMagicEffectNumCountersC"),
        // caseInsensitive("GetMagicEffectOtherActorValue"),
        // caseInsensitive("GetMagicEffectOtherActorValueC"),
        // caseInsensitive("GetMagicEffectProjectileSpeed"),
        // caseInsensitive("GetMagicEffectProjectileSpeedC"),
        // caseInsensitive("GetMagicEffectResistValue"),
        // caseInsensitive("GetMagicEffectResistValueC"),
        // caseInsensitive("GetMagicEffectSchool"),
        // caseInsensitive("GetMagicEffectSchoolC"),
        // caseInsensitive("GetMagicEffectUsedObject"),
        // caseInsensitive("GetMagicEffectUsedObjectC"),
        // caseInsensitive("GetMagicItemEffectCount"),
        // caseInsensitive("GetMagicItemType"),
        // caseInsensitive("GetMagicProjectileSpell"),
        // caseInsensitive("GetMapMarkerType"),
        // caseInsensitive("GetMapMarkers"),
        // caseInsensitive("GetMapMenuMarkerName"),
        // caseInsensitive("GetMapMenuMarkerRef"),
        // caseInsensitive("GetMaxAV"),
        // caseInsensitive("GetMaxAVC"),
        // caseInsensitive("GetMaxLevel"),
        // caseInsensitive("GetMerchantContainer"),
        // caseInsensitive("GetMessageBoxType"),
        // caseInsensitive("GetMiddleHighActors"),
        // caseInsensitive("GetMinLevel"),
        // caseInsensitive("GetModIndex"),
        // caseInsensitive("GetModLocalData"),
        // caseInsensitive("GetModelPath"),
        // caseInsensitive("GetMouseButtonPress"),
        // caseInsensitive("GetMouseButtonsSwapped"),
        // caseInsensitive("GetNextRef"),
        // caseInsensitive("GetNthAEAV"),
        // caseInsensitive("GetNthAEBoundItem"),
        // caseInsensitive("GetNthAECaster"),
        // caseInsensitive("GetNthAECode"),
        // caseInsensitive("GetNthAEData"),
        // caseInsensitive("GetNthAEDuration"),
        // caseInsensitive("GetNthAEIndex"),
        // caseInsensitive("GetNthAEMagicEnchantObject"),
        // caseInsensitive("GetNthAEMagicItem"),
        // caseInsensitive("GetNthAEMagnitude"),
        // caseInsensitive("GetNthAESummonRef"),
        // caseInsensitive("GetNthAETime"),
        // caseInsensitive("GetNthAcitveEffectMagnitude"),
        // caseInsensitive("GetNthActiveEffectActorValue"),
        // caseInsensitive("GetNthActiveEffectBoundItem"),
        // caseInsensitive("GetNthActiveEffectCaster"),
        // caseInsensitive("GetNthActiveEffectCode"),
        // caseInsensitive("GetNthActiveEffectData"),
        // caseInsensitive("GetNthActiveEffectDuration"),
        // caseInsensitive("GetNthActiveEffectEnchantObject"),
        // caseInsensitive("GetNthActiveEffectMagicEnchantObject"),
        // caseInsensitive("GetNthActiveEffectMagicItem"),
        // caseInsensitive("GetNthActiveEffectMagicItemIndex"),
        // caseInsensitive("GetNthActiveEffectMagnitude"),
        // caseInsensitive("GetNthActiveEffectSummonRef"),
        // caseInsensitive("GetNthActiveEffectTimeElapsed"),
        // caseInsensitive("GetNthChildRef"),
        // caseInsensitive("GetNthDetectedActor"),
        // caseInsensitive("GetNthEIAV"),
        // caseInsensitive("GetNthEIArea"),
        // caseInsensitive("GetNthEICode"),
        // caseInsensitive("GetNthEIDuration"),
        // caseInsensitive("GetNthEIMagnitude"),
        // caseInsensitive("GetNthEIName"),
        // caseInsensitive("GetNthEIRange"),
        // caseInsensitive("GetNthEISSchool"),
        // caseInsensitive("GetNthEISVisualEffect"),
        // caseInsensitive("GetNthEIScript"),
        // caseInsensitive("GetNthEffectItem"),
        // caseInsensitive("GetNthEffectItemActorValue"),
        // caseInsensitive("GetNthEffectItemArea"),
        // caseInsensitive("GetNthEffectItemCode"),
        // caseInsensitive("GetNthEffectItemDuration"),
        // caseInsensitive("GetNthEffectItemMagnitude"),
        // caseInsensitive("GetNthEffectItemName"),
        // caseInsensitive("GetNthEffectItemRange"),
        // caseInsensitive("GetNthEffectItemScript"),
        // caseInsensitive("GetNthEffectItemScriptName"),
        // caseInsensitive("GetNthEffectItemScriptSchool"),
        // caseInsensitive("GetNthEffectItemScriptVisualEffect"),
        // caseInsensitive("GetNthExplicitRef"),
        // caseInsensitive("GetNthFaction"),
        // caseInsensitive("GetNthFactionRankName"),
        // caseInsensitive("GetNthFollower"),
        // caseInsensitive("GetNthLevItem"),
        // caseInsensitive("GetNthLevItemCount"),
        // caseInsensitive("GetNthLevItemLevel"),
        // caseInsensitive("GetNthMagicEffectCounter"),
        // caseInsensitive("GetNthMagicEffectCounterC"),
        // caseInsensitive("GetNthModName"),
        // caseInsensitive("GetNthPackage"),
        // caseInsensitive("GetNthPlayerSpell"),
        // caseInsensitive("GetNthRaceBonusSkill"),
        // caseInsensitive("GetNthRaceSpell"),
        // caseInsensitive("GetNthSpell"),
        // caseInsensitive("GetNumChildRefs"),
        // caseInsensitive("GetNumDetectedActors"),
        // caseInsensitive("GetNumExplicitRefs"),
        // caseInsensitive("GetNumFactions"),
        // caseInsensitive("GetNumFollowers"),
        // caseInsensitive("GetNumItems"),
        // caseInsensitive("GetNumKeysPressed"),
        // caseInsensitive("GetNumLevItems"),
        // caseInsensitive("GetNumLoadedMods"),
        // caseInsensitive("GetNumLoadedPlugins"),
        // caseInsensitive("GetNumMouseButtonsPressed"),
        // caseInsensitive("GetNumPackages"),
        // caseInsensitive("GetNumRanks"),
        // caseInsensitive("GetNumRefs"),
        // caseInsensitive("GetNumRefsInCell"),
        // caseInsensitive("GetNumericINISetting"),
        // caseInsensitive("GetOBSERevision"),
        // caseInsensitive("GetOBSEVersion"),
        // caseInsensitive("GetObjectCharge"),
        // caseInsensitive("GetObjectHealth"),
        // caseInsensitive("GetObjectType"),
        // caseInsensitive("GetOblivionDirectory"),
        // caseInsensitive("GetOpenKey"),
        // caseInsensitive("GetOpenSound"),
        // caseInsensitive("GetOwner"),
        // caseInsensitive("GetOwningFactionRank"),
        // caseInsensitive("GetOwningFactionRequiredRank"),
        // caseInsensitive("GetPCAttributeBonus"),
        // caseInsensitive("GetPCAttributeBonusC"),
        // caseInsensitive("GetPCLastDroppedItem"),
        // caseInsensitive("GetPCLastDroppedItemRef"),
        // caseInsensitive("GetPCLastHorse"),
        // caseInsensitive("GetPCLastLoadDoor"),
        // caseInsensitive("GetPCMajorSkillUps"),
        // caseInsensitive("GetPCMovementSpeedModifier"),
        // caseInsensitive("GetPCSpellEffectivenessModifier"),
        // caseInsensitive("GetPCTrainingSessionsUsed"),
        // caseInsensitive("GetPackageAllowFalls"),
        // caseInsensitive("GetPackageAllowSwimming"),
        // caseInsensitive("GetPackageAlwaysRun"),
        // caseInsensitive("GetPackageAlwaysSneak"),
        // caseInsensitive("GetPackageArmorUnequipped"),
        // caseInsensitive("GetPackageContinueIfPCNear"),
        // caseInsensitive("GetPackageData"),
        // caseInsensitive("GetPackageDefensiveCombat"),
        // caseInsensitive("GetPackageLocationData"),
        // caseInsensitive("GetPackageLockDoorsAtEnd"),
        // caseInsensitive("GetPackageLockDoorsAtLocation"),
        // caseInsensitive("GetPackageLockDoorsAtStart"),
        // caseInsensitive("GetPackageMustComplete"),
        // caseInsensitive("GetPackageMustReachLocation"),
        // caseInsensitive("GetPackageNoIdleAnims"),
        // caseInsensitive("GetPackageOffersServices"),
        // caseInsensitive("GetPackageOncePerDay"),
        // caseInsensitive("GetPackageScheduleData"),
        // caseInsensitive("GetPackageSkipFalloutBehavior"),
        // caseInsensitive("GetPackageTargetData"),
        // caseInsensitive("GetPackageUnlockDoorsAtEnd"),
        // caseInsensitive("GetPackageUnlockDoorsAtLocation"),
        // caseInsensitive("GetPackageUnlockDoorsAtStart"),
        // caseInsensitive("GetPackageUseHorse"),
        // caseInsensitive("GetPackageWeaponsUnequipped"),
        // caseInsensitive("GetParentCell"),
        // caseInsensitive("GetParentCellOwner"),
        // caseInsensitive("GetParentCellOwningFactionRank"),
        // caseInsensitive("GetParentCellOwningFactionRequiredRank"),
        // caseInsensitive("GetParentCellWaterHeight"),
        // caseInsensitive("GetParentWorldspace"),
        // caseInsensitive("GetPathNodeLinkedRef"),
        // caseInsensitive("GetPathNodePos"),
        // caseInsensitive("GetPathNodesInRadius"),
        // caseInsensitive("GetPathNodesInRect"),
        // caseInsensitive("GetPlayerBirthsign"),
        // caseInsensitive("GetPlayerSkillAdvances"),
        // caseInsensitive("GetPlayerSkillAdvancesC"),
        // caseInsensitive("GetPlayerSkillUse"),
        // caseInsensitive("GetPlayerSkillUseC"),
        // caseInsensitive("GetPlayerSpell"),
        // caseInsensitive("GetPlayerSpellCount"),
        // caseInsensitive("GetPlayersLastActivatedLoadDoor"),
        // caseInsensitive("GetPlayersLastRiddenHorse"),
        // caseInsensitive("GetPluginVersion"),
        // caseInsensitive("GetPlyerSpellCount"),
        // caseInsensitive("GetProcessLevel"),
        // caseInsensitive("GetProjectile"),
        // caseInsensitive("GetProjectileDistanceTraveled"),
        // caseInsensitive("GetProjectileLifetime"),
        // caseInsensitive("GetProjectileSource"),
        // caseInsensitive("GetProjectileSpeed"),
        // caseInsensitive("GetProjectileType"),
        // caseInsensitive("GetQuality"),
        // caseInsensitive("GetQuantityMenuCurrentQuantity"),
        // caseInsensitive("GetQuantityMenuItem"),
        // caseInsensitive("GetQuantityMenuMaximumQuantity"),
        // caseInsensitive("GetRace"),
        // caseInsensitive("GetRaceAttribute"),
        // caseInsensitive("GetRaceAttributeC"),
        // caseInsensitive("GetRaceDefaultHair"),
        // caseInsensitive("GetRaceEyes"),
        // caseInsensitive("GetRaceHairs"),
        // caseInsensitive("GetRaceReaction"),
        // caseInsensitive("GetRaceScale"),
        // caseInsensitive("GetRaceSkillBonus"),
        // caseInsensitive("GetRaceSkillBonusC"),
        // caseInsensitive("GetRaceSpellCount"),
        // caseInsensitive("GetRaceVoice"),
        // caseInsensitive("GetRaceWeight"),
        // caseInsensitive("GetRawFormIDString"),
        // caseInsensitive("GetRefCount"),
        // caseInsensitive("GetRefVariable"),
        // caseInsensitive("GetRequiredSkillExp"),
        // caseInsensitive("GetRider"),
        // caseInsensitive("GetScript"),
        // caseInsensitive("GetScriptActiveEffectIndex"),
        // caseInsensitive("GetSelectedSpells"),
        // caseInsensitive("GetServicesMask"),
        // caseInsensitive("GetSigilStoneUses"),
        // caseInsensitive("GetSkillGoverningAttribute"),
        // caseInsensitive("GetSkillGoverningAttributeC"),
        // caseInsensitive("GetSkillSpecialization"),
        // caseInsensitive("GetSkillUseIncrement"),
        // caseInsensitive("GetSkillUseIncrementC"),
        // caseInsensitive("GetSoulGemCapacity"),
        // caseInsensitive("GetSoulLevel"),
        // caseInsensitive("GetSoundPlaying"),
        // caseInsensitive("GetSourceModIndex"),
        // caseInsensitive("GetSpecialAnims"),
        // caseInsensitive("GetSpellAreaEffectIgnoresLOS"),
        // caseInsensitive("GetSpellCount"),
        // caseInsensitive("GetSpellDisallowAbsorbReflect"),
        // caseInsensitive("GetSpellEffectiveness"),
        // caseInsensitive("GetSpellExplodesWithNoTarget"),
        // caseInsensitive("GetSpellHostile"),
        // caseInsensitive("GetSpellImmuneToSilence"),
        // caseInsensitive("GetSpellMagickaCost"),
        // caseInsensitive("GetSpellMasteryLevel"),
        // caseInsensitive("GetSpellPCStart"),
        // caseInsensitive("GetSpellSchool"),
        // caseInsensitive("GetSpellScriptEffectAlwaysApplies"),
        // caseInsensitive("GetSpellType"),
        // caseInsensitive("GetSpells"),
        // caseInsensitive("GetStringGameSetting"),
        // caseInsensitive("GetStringINISetting"),
        // caseInsensitive("GetSunDamage"),
        // caseInsensitive("GetSunGlare"),
        // caseInsensitive("GetTargets"),
        // caseInsensitive("GetTelekinesisRef"),
        // caseInsensitive("GetTeleportCell	"),
        // caseInsensitive("GetTeleportCellName"),
        // caseInsensitive("GetTerrainHeight"),
        // caseInsensitive("GetTextInputControlPressed"),
        // caseInsensitive("GetTextInputCursorPos"),
        // caseInsensitive("GetTexturePath"),
        // caseInsensitive("GetTileChildren"),
        // caseInsensitive("GetTileTraits"),
        // caseInsensitive("GetTimeLeft"),
        // caseInsensitive("GetTotalAEAbilityMagnitude"),
        // caseInsensitive("GetTotalAEAbilityMagnitudeC"),
        // caseInsensitive("GetTotalAEAlchemyMagnitude"),
        // caseInsensitive("GetTotalAEAlchemyMagnitudeC"),
        // caseInsensitive("GetTotalAEAllSpellsMagnitude"),
        // caseInsensitive("GetTotalAEAllSpellsMagnitudeC"),
        // caseInsensitive("GetTotalAEDiseaseMagnitude"),
        // caseInsensitive("GetTotalAEDiseaseMagnitudeC"),
        // caseInsensitive("GetTotalAEEnchantmentMagnitude"),
        // caseInsensitive("GetTotalAEEnchantmentMagnitudeC"),
        // caseInsensitive("GetTotalAELesserPowerMagnitude"),
        // caseInsensitive("GetTotalAELesserPowerMagnitudeC"),
        // caseInsensitive("GetTotalAEMagnitude"),
        // caseInsensitive("GetTotalAEMagnitudeC"),
        // caseInsensitive("GetTotalAENonAbilityMagnitude"),
        // caseInsensitive("GetTotalAENonAbilityMagnitudeC"),
        // caseInsensitive("GetTotalAEPowerMagnitude"),
        // caseInsensitive("GetTotalAEPowerMagnitudeC"),
        // caseInsensitive("GetTotalAESpellMagnitude"),
        // caseInsensitive("GetTotalAESpellMagnitudeC"),
        // caseInsensitive("GetTotalActiveEffectMagnitude"),
        // caseInsensitive("GetTotalActiveEffectMagnitudeC"),
        // caseInsensitive("GetTotalPCAttributeBonus"),
        // caseInsensitive("GetTrainerLevel"),
        // caseInsensitive("GetTrainerSkill"),
        // caseInsensitive("GetTransDelta"),
        // caseInsensitive("GetTransactionInfo"),
        // caseInsensitive("GetTravelHorse"),
        // caseInsensitive("GetUsedPowers"),
        // caseInsensitive("GetUserTime"),
        // caseInsensitive("GetVariable"),
        // caseInsensitive("GetVelocity"),
        // caseInsensitive("GetVerticalVelocity"),
        // caseInsensitive("GetWaterHeight"),
        // caseInsensitive("GetWaterShader"),
        // caseInsensitive("GetWeahterCloudSpeedUpper"),
        // caseInsensitive("GetWeaponReach"),
        // caseInsensitive("GetWeaponSpeed"),
        // caseInsensitive("GetWeaponType"),
        // caseInsensitive("GetWeatherClassification"),
        // caseInsensitive("GetWeatherCloudSpeedLower"),
        // caseInsensitive("GetWeatherCloudSpeedUpper"),
        // caseInsensitive("GetWeatherColor"),
        // caseInsensitive("GetWeatherFogDayFar"),
        // caseInsensitive("GetWeatherFogDayNear"),
        // caseInsensitive("GetWeatherFogNightFar"),
        // caseInsensitive("GetWeatherFogNightNear"),
        // caseInsensitive("GetWeatherHDRValue"),
        // caseInsensitive("GetWeatherLightningFrequency"),
        // caseInsensitive("GetWeatherOverride"),
        // caseInsensitive("GetWeatherSunDamage"),
        // caseInsensitive("GetWeatherSunGlare"),
        // caseInsensitive("GetWeatherTransDelta"),
        // caseInsensitive("GetWeatherWindSpeed"),
        // caseInsensitive("GetWeight"),
        // caseInsensitive("GetWorldParentWorld"),
        // caseInsensitive("GetWorldSpaceParentWorldSpace"),
        // caseInsensitive("GlobalVariableExists"),
        // caseInsensitive("Goto"),
        // caseInsensitive("HammerKey"),
        // caseInsensitive("HasBeenPickedUp"),
        // caseInsensitive("HasEffectShader"),
        // caseInsensitive("HasLowLevelProcessing"),
        // caseInsensitive("HasModel"),
        // caseInsensitive("HasName"),
        // caseInsensitive("HasNoPersuasion"),
        // caseInsensitive("HasSpell"),
        // caseInsensitive("HasTail"),
        // caseInsensitive("HasVariable"),
        // caseInsensitive("HasWater"),
        // caseInsensitive("HoldKey"),
        // caseInsensitive("IconPathIncludes"),
        // caseInsensitive("IdentityMat"),
        // caseInsensitive("IncrementPlayerSkillUse"),
        // caseInsensitive("IncrementPlayerSkillUseC"),
        // caseInsensitive("InsertInInputText"),
        // caseInsensitive("IsActivatable"),
        // caseInsensitive("IsActivator"),
        // caseInsensitive("IsActorRespawning"),
        // caseInsensitive("IsAlchemyItem"),
        // caseInsensitive("IsAmmo"),
        // caseInsensitive("IsAnimGroupPlaying"),
        // caseInsensitive("IsAnimPlaying"),
        // caseInsensitive("IsApparatus"),
        // caseInsensitive("IsArmor"),
        // caseInsensitive("IsAttacking"),
        // caseInsensitive("IsAutomaticDoor"),
        // caseInsensitive("IsBarterMenuActive"),
        // caseInsensitive("IsBipedIconPathValid"),
        // caseInsensitive("IsBipedModelPathValid"),
        // caseInsensitive("IsBlocking"),
        // caseInsensitive("IsBook"),
        // caseInsensitive("IsCasting"),
        // caseInsensitive("IsCellPublic"),
        // caseInsensitive("IsClassAttribute"),
        // caseInsensitive("IsClassSkill"),
        // caseInsensitive("IsClassSkillC"),
        // caseInsensitive("IsClonedForm"),
        // caseInsensitive("IsClothing"),
        // caseInsensitive("IsConsoleOpen"),
        // caseInsensitive("IsContainer"),
        // caseInsensitive("IsControl"),
        // caseInsensitive("IsControlDisabled"),
        // caseInsensitive("IsControlPressed"),
        // caseInsensitive("IsCreature"),
        // caseInsensitive("IsCreatureBiped"),
        // caseInsensitive("IsDigit"),
        // caseInsensitive("IsDodging"),
        // caseInsensitive("IsDoor"),
        // caseInsensitive("IsEquipped"),
        // caseInsensitive("IsFactionEvil"),
        // caseInsensitive("IsFactionHidden"),
        // caseInsensitive("IsFemale"),
        // caseInsensitive("IsFlora"),
        // caseInsensitive("IsFlying"),
        // caseInsensitive("IsFood"),
        // caseInsensitive("IsFormValid"),
        // caseInsensitive("IsFurniture"),
        // caseInsensitive("IsGameMessageBox"),
        // caseInsensitive("IsGlobalCollisionDisabled"),
        // caseInsensitive("IsHarvested"),
        // caseInsensitive("IsHiddenDoor"),
        // caseInsensitive("IsIconPathValid"),
        // caseInsensitive("IsInAir"),
        // caseInsensitive("IsInOblivion"),
        // caseInsensitive("IsIngredient"),
        // caseInsensitive("IsJumping"),
        // caseInsensitive("IsKey"),
        // caseInsensitive("IsKeyDisabled"),
        // caseInsensitive("IsKeyPressed"),
        // caseInsensitive("IsKeyPressed2"),
        // caseInsensitive("IsKeyPressed3"),
        // caseInsensitive("IsLetter"),
        // caseInsensitive("IsLight"),
        // caseInsensitive("IsLightCarriable"),
        // caseInsensitive("IsLoadDoor"),
        // caseInsensitive("IsMECanRecover"),
        // caseInsensitive("IsMECanRecoverC"),
        // caseInsensitive("IsMEDetrimental"),
        // caseInsensitive("IsMEDetrimentalC"),
        // caseInsensitive("IsMEForEnchanting"),
        // caseInsensitive("IsMEForEnchantingC"),
        // caseInsensitive("IsMEForSpellmaking"),
        // caseInsensitive("IsMEForSpellmakingC"),
        // caseInsensitive("IsMEHostile"),
        // caseInsensitive("IsMEHostileC"),
        // caseInsensitive("IsMEMagnitudePercent"),
        // caseInsensitive("IsMEMagnitudePercentC"),
        // caseInsensitive("IsMEOnSelfAllowed"),
        // caseInsensitive("IsMEOnSelfAllowedC"),
        // caseInsensitive("IsMEOnTargetAllowed"),
        // caseInsensitive("IsMEOnTargetAllowedC"),
        // caseInsensitive("IsMEOnTouchAllowed"),
        // caseInsensitive("IsMEOnTouchAllowedC"),
        // caseInsensitive("IsMagicEffectCanRecover"),
        // caseInsensitive("IsMagicEffectCanRecoverC"),
        // caseInsensitive("IsMagicEffectDetrimental"),
        // caseInsensitive("IsMagicEffectDetrimentalC"),
        // caseInsensitive("IsMagicEffectForEnchanting"),
        // caseInsensitive("IsMagicEffectForEnchantingC"),
        // caseInsensitive("IsMagicEffectForSpellmaking"),
        // caseInsensitive("IsMagicEffectForSpellmakingC"),
        // caseInsensitive("IsMagicEffectHostile"),
        // caseInsensitive("IsMagicEffectHostileC"),
        // caseInsensitive("IsMagicEffectMagnitudePercent"),
        // caseInsensitive("IsMagicEffectMagnitudePercentC"),
        // caseInsensitive("IsMagicEffectOnSelfAllowed"),
        // caseInsensitive("IsMagicEffectOnSelfAllowedC"),
        // caseInsensitive("IsMagicEffectOnTargetAllowed"),
        // caseInsensitive("IsMagicEffectOnTargetAllowedC"),
        // caseInsensitive("IsMagicEffectOnTouchAllowed"),
        // caseInsensitive("IsMagicEffectOnTouchAllowedC"),
        // caseInsensitive("IsMagicItemAutoCalc"),
        // caseInsensitive("IsMajor"),
        // caseInsensitive("IsMajorC"),
        // caseInsensitive("IsMapMarkerVisible"),
        // caseInsensitive("IsMinimalUseDoor"),
        // caseInsensitive("IsModLoaded"),
        // caseInsensitive("IsModelPathValid"),
        // caseInsensitive("IsMovingBackward"),
        // caseInsensitive("IsMovingForward"),
        // caseInsensitive("IsMovingLeft"),
        // caseInsensitive("IsMovingRight"),
        // caseInsensitive("IsNaked"),
        // caseInsensitive("IsNthActiveEffectApplied"),
        // caseInsensitive("IsNthEISHostile"),
        // caseInsensitive("IsNthEffectItemScriptHostile"),
        // caseInsensitive("IsNthEffectItemScripted"),
        // caseInsensitive("IsOblivionGate"),
        // caseInsensitive("IsOblivionInterior"),
        // caseInsensitive("IsOblivionWorld"),
        // caseInsensitive("IsOffLimits"),
        // caseInsensitive("IsOnGround"),
        // caseInsensitive("IsPCLevelOffset"),
        // caseInsensitive("IsPathNodeDisabled"),
        // caseInsensitive("IsPersistent"),
        // caseInsensitive("IsPlayable"),
        // caseInsensitive("IsPlayable2"),
        // caseInsensitive("IsPluginInstalled"),
        // caseInsensitive("IsPoison"),
        // caseInsensitive("IsPotion"),
        // caseInsensitive("IsPowerAttacking"),
        // caseInsensitive("IsPrintable"),
        // caseInsensitive("IsPunctuation"),
        // caseInsensitive("IsQuestCompleted"),
        // caseInsensitive("IsQuestItem"),
        // caseInsensitive("IsRaceBonusSkill"),
        // caseInsensitive("IsRaceBonusSkillC"),
        // caseInsensitive("IsRacePlayable"),
        // caseInsensitive("IsRecoiling"),
        // caseInsensitive("IsRefDeleted"),
        // caseInsensitive("IsRefEssential"),
        // caseInsensitive("IsReference"),
        // caseInsensitive("IsScripted"),
        // caseInsensitive("IsSigilStone"),
        // caseInsensitive("IsSoulGem"),
        // caseInsensitive("IsSpellHostile"),
        // caseInsensitive("IsStaggered"),
        // caseInsensitive("IsSummonable"),
        // caseInsensitive("IsTaken"),
        // caseInsensitive("IsTextInputInUse"),
        // caseInsensitive("IsThirdPerson"),
        // caseInsensitive("IsTurningLeft"),
        // caseInsensitive("IsTurningRight"),
        // caseInsensitive("IsUnderWater"),
        // caseInsensitive("IsUnsafeRespawns"),
        // caseInsensitive("IsUppercase"),
        // caseInsensitive("IsWeapon"),
        // caseInsensitive("Label"),
        // caseInsensitive("LeftShift"),
        // caseInsensitive("LinkToDoor"),
        // caseInsensitive("LoadGameEx"),
        // caseInsensitive("Log"),
        // caseInsensitive("Log10"),
        // caseInsensitive("LogicalAnd"),
        // caseInsensitive("LogicalNot"),
        // caseInsensitive("LogicalOr"),
        // caseInsensitive("LogicalXor"),
        // caseInsensitive("MEHasNoArea"),
        // caseInsensitive("MEHasNoAreaC"),
        // caseInsensitive("MEHasNoDuration"),
        // caseInsensitive("MEHasNoDurationC"),
        // caseInsensitive("MEHasNoHitEffect"),
        // caseInsensitive("MEHasNoHitEffectC"),
        // caseInsensitive("MEHasNoIngredient"),
        // caseInsensitive("MEHasNoIngredientC"),
        // caseInsensitive("MEHasNoMagnitude"),
        // caseInsensitive("MEHasNoMagnitudeC"),
        // caseInsensitive("MEUsesArmor"),
        // caseInsensitive("MEUsesArmorC"),
        // caseInsensitive("MEUsesAttribute"),
        // caseInsensitive("MEUsesAttributeC"),
        // caseInsensitive("MEUsesCreature"),
        // caseInsensitive("MEUsesCreatureC"),
        // caseInsensitive("MEUsesOtherActorValue"),
        // caseInsensitive("MEUsesOtherActorValueC"),
        // caseInsensitive("MEUsesWeapon"),
        // caseInsensitive("MEUsesWeaponC"),
        // caseInsensitive("MagicEffectCodeFromChars"),
        // caseInsensitive("MagicEffectFXPersists"),
        // caseInsensitive("MagicEffectFXPersistsC"),
        // caseInsensitive("MagicEffectFromChars"),
        // caseInsensitive("MagicEffectFromCode"),
        // caseInsensitive("MagicEffectHasNoArea"),
        // caseInsensitive("MagicEffectHasNoAreaC"),
        // caseInsensitive("MagicEffectHasNoDuration"),
        // caseInsensitive("MagicEffectHasNoDurationC"),
        // caseInsensitive("MagicEffectHasNoHitEffect"),
        // caseInsensitive("MagicEffectHasNoHitEffectC"),
        // caseInsensitive("MagicEffectHasNoIngredient"),
        // caseInsensitive("MagicEffectHasNoIngredientC"),
        // caseInsensitive("MagicEffectHasNoMagnitude"),
        // caseInsensitive("MagicEffectHasNoMagnitudeC"),
        // caseInsensitive("MagicEffectUsesArmor"),
        // caseInsensitive("MagicEffectUsesArmorC"),
        // caseInsensitive("MagicEffectUsesAttribute"),
        // caseInsensitive("MagicEffectUsesAttributeC"),
        // caseInsensitive("MagicEffectUsesCreature"),
        // caseInsensitive("MagicEffectUsesCreatureC"),
        // caseInsensitive("MagicEffectUsesOtherActorValue"),
        // caseInsensitive("MagicEffectUsesOtherActorValueC"),
        // caseInsensitive("MagicEffectUsesSkill"),
        // caseInsensitive("MagicEffectUsesSkillC"),
        // caseInsensitive("MagicEffectUsesWeapon"),
        // caseInsensitive("MagicEffectUsesWeaponC"),
        // caseInsensitive("MagicHasEffect"),
        // caseInsensitive("MagicHasEffectC"),
        // caseInsensitive("MagicItemHasEffect"),
        // caseInsensitive("MagicItemHasEffectCode"),
        // caseInsensitive("MagicItemHasEffectCount"),
        // caseInsensitive("MagicItemHasEffectCountC"),
        // caseInsensitive("MagicItemHasEffectCountCode"),
        // caseInsensitive("MagicItemHasEffectItemScript"),
        // caseInsensitive("MatAdd"),
        // caseInsensitive("MatInv"),
        // caseInsensitive("MatMult"),
        // caseInsensitive("MatScale"),
        // caseInsensitive("MatSubtract"),
        // caseInsensitive("MatchPotion"),
        // caseInsensitive("MatrixAdd"),
        // caseInsensitive("MatrixDeterminant"),
        // caseInsensitive("MatrixInvert"),
        // caseInsensitive("MatrixMultiply"),
        // caseInsensitive("MatrixRREF"),
        // caseInsensitive("MatrixScale"),
        // caseInsensitive("MatrixSubtract"),
        // caseInsensitive("MatrixTrace"),
        // caseInsensitive("MatrixTranspose"),
        // caseInsensitive("MenuHoldKey"),
        // caseInsensitive("MenuReleaseKey"),
        // caseInsensitive("MenuTapKey"),
        // caseInsensitive("MessageBoxEx"),
        // caseInsensitive("MessageEx"),
        // caseInsensitive("ModAV2"),
        // caseInsensitive("ModAVC"),
        // caseInsensitive("ModAVMod"),
        // caseInsensitive("ModAVModC"),
        // caseInsensitive("ModActorValue2"),
        // caseInsensitive("ModActorValueC"),
        // caseInsensitive("ModArmorAR"),
        // caseInsensitive("ModAttackDamage"),
        // caseInsensitive("ModCurrentCharge"),
        // caseInsensitive("ModEnchantmentCharge"),
        // caseInsensitive("ModEnchantmentCost"),
        // caseInsensitive("ModEquippedCurrentCharge"),
        // caseInsensitive("ModEquippedCurrentHealth"),
        // caseInsensitive("ModFemaleBipedPath"),
        // caseInsensitive("ModFemaleGroundPath"),
        // caseInsensitive("ModFemaleIconPath"),
        // caseInsensitive("ModGoldValue"),
        // caseInsensitive("ModIconPath"),
        // caseInsensitive("ModLocalDataExists"),
        // caseInsensitive("ModMaleBipedPath"),
        // caseInsensitive("ModMaleGroundPath"),
        // caseInsensitive("ModMaleIconPath"),
        // caseInsensitive("ModModelPath"),
        // caseInsensitive("ModName"),
        // caseInsensitive("ModNthAEMagnitude"),
        // caseInsensitive("ModNthActiveEffectMagnitude"),
        // caseInsensitive("ModNthEIArea"),
        // caseInsensitive("ModNthEIDuration"),
        // caseInsensitive("ModNthEIMagnitude"),
        // caseInsensitive("ModNthEISName"),
        // caseInsensitive("ModNthEffectItemArea"),
        // caseInsensitive("ModNthEffectItemDuration"),
        // caseInsensitive("ModNthEffectItemMagnitude"),
        // caseInsensitive("ModNthEffectItemScriptName"),
        // caseInsensitive("ModObjectCharge"),
        // caseInsensitive("ModObjectHealth"),
        // caseInsensitive("ModPCMovementSpeed"),
        // caseInsensitive("ModPCSpellEffectiveness"),
        // caseInsensitive("ModPlayerSkillExp"),
        // caseInsensitive("ModPlayerSkillExpC"),
        // caseInsensitive("ModQuality"),
        // caseInsensitive("ModSigilStoneUses"),
        // caseInsensitive("ModSpellMagickaCost"),
        // caseInsensitive("ModWeaponReach"),
        // caseInsensitive("ModWeaponSpeed"),
        // caseInsensitive("ModWeight"),
        // caseInsensitive("ModelPathIncludes"),
        // caseInsensitive("MoveMouseX"),
        // caseInsensitive("MoveMouseY"),
        // caseInsensitive("MoveTextInputCursor"),
        // caseInsensitive("NameIncludes"),
        // caseInsensitive("NumToHex"),
        // caseInsensitive("OffersApparatus"),
        // caseInsensitive("OffersArmor"),
        // caseInsensitive("OffersBooks"),
        // caseInsensitive("OffersClothing"),
        // caseInsensitive("OffersIngredients"),
        // caseInsensitive("OffersLights"),
        // caseInsensitive("OffersMagicItems"),
        // caseInsensitive("OffersMiscItems"),
        // caseInsensitive("OffersPotions"),
        // caseInsensitive("OffersRecharging"),
        // caseInsensitive("OffersRepair"),
        // caseInsensitive("OffersServicesC"),
        // caseInsensitive("OffersSpells"),
        // caseInsensitive("OffersTraining"),
        // caseInsensitive("OffersWeapons"),
        // caseInsensitive("OnControlDown"),
        // caseInsensitive("OnKeyDown"),
        // caseInsensitive("OpenTextInput"),
        // caseInsensitive("OutputLocalMapPicturesOverride"),
        // caseInsensitive("ParentCellHasWater"),
        // caseInsensitive("PathEdgeExists"),
        // caseInsensitive("PlayIdle"),
        // caseInsensitive("Pow"),
        // caseInsensitive("Print"),
        // caseInsensitive("PrintActiveTileInfo"),
        // caseInsensitive("PrintC"),
        // caseInsensitive("PrintD"),
        // caseInsensitive("PrintTileInfo"),
        caseInsensitive("PrintToConsole"),
        // caseInsensitive("QuestExists"),
        // caseInsensitive("RACos"),
        // caseInsensitive("RASin"),
        // caseInsensitive("RATan"),
        // caseInsensitive("RATan2"),
        // caseInsensitive("RCos"),
        // caseInsensitive("RCosh"),
        // caseInsensitive("RSin"),
        // caseInsensitive("RSinh"),
        // caseInsensitive("RTan"),
        // caseInsensitive("RTanh"),
        // caseInsensitive("Rand"),
        // caseInsensitive("RefreshControlMap"),
        // caseInsensitive("RefreshCurrentClimate"),
        // caseInsensitive("ReleaseKey"),
        // caseInsensitive("RemoveAllEffectItems"),
        // caseInsensitive("RemoveBaseSpell"),
        // caseInsensitive("RemoveEnchantment"),
        // caseInsensitive("RemoveEquippedWeaponPoison"),
        // caseInsensitive("RemoveEventHandler"),
        // caseInsensitive("RemoveFromLeveledList"),
        // caseInsensitive("RemoveItemNS"),
        // caseInsensitive("RemoveLevItemByLevel"),
        // caseInsensitive("RemoveMeIR"),
        // caseInsensitive("RemoveModLocalData"),
        // caseInsensitive("RemoveNthEffect"),
        // caseInsensitive("RemoveNthEffectItem"),
        // caseInsensitive("RemoveNthLevItem"),
        // caseInsensitive("RemoveNthMagicEffectCounter"),
        // caseInsensitive("RemoveNthMagicEffectCounterC"),
        // caseInsensitive("RemoveScript"),
        // caseInsensitive("RemoveSpellNS"),
        // caseInsensitive("ResetAllVariables"),
        // caseInsensitive("ResolveModIndex"),
        // caseInsensitive("RestoreIP"),
        // caseInsensitive("RightShift"),
        // caseInsensitive("RotMat"),
        // caseInsensitive("RowVec"),
        caseInsensitive("RunBatchScript"),
        // caseInsensitive("RunScriptLine"),
        // caseInsensitive("SaveIP"),
        // caseInsensitive("SetAVC"),
        // caseInsensitive("SetAVMod"),
        // caseInsensitive("SetAVModC"),
        // caseInsensitive("SetActiveQuest"),
        // caseInsensitive("SetActorRespawns"),
        // caseInsensitive("SetActorValueC"),
        // caseInsensitive("SetAltControl"),
        // caseInsensitive("SetApparatusType"),
        // caseInsensitive("SetArmorAR"),
        // caseInsensitive("SetArmorType"),
        // caseInsensitive("SetArrowProjectileBowEnchantment"),
        // caseInsensitive("SetArrowProjectileEnchantment"),
        // caseInsensitive("SetArrowProjectilePoison"),
        // caseInsensitive("SetAttackDamage"),
        // caseInsensitive("SetBaseForm"),
        // caseInsensitive("SetBipedIconPathEX"),
        // caseInsensitive("SetBipedModelPathEX"),
        // caseInsensitive("SetBipedSlotMask"),
        // caseInsensitive("SetBookCantBeTaken"),
        // caseInsensitive("SetBookIsScroll"),
        // caseInsensitive("SetBookSkillTaught"),
        // caseInsensitive("SetButtonPressed"),
        // caseInsensitive("SetCanCastPower"),
        // caseInsensitive("SetCanCorpseCheck"),
        // caseInsensitive("SetCanFastTravelFromWorld"),
        // caseInsensitive("SetCanTravelToMapMarker"),
        // caseInsensitive("SetCellBehavesAsExterior"),
        // caseInsensitive("SetCellClimate"),
        // caseInsensitive("SetCellHasWater"),
        // caseInsensitive("SetCellIsPublic"),
        // caseInsensitive("SetCellLighting"),
        // caseInsensitive("SetCellResetHours"),
        // caseInsensitive("SetCellWaterHeight"),
        // caseInsensitive("SetCellWaterType"),
        // caseInsensitive("SetChanceNone"),
        // caseInsensitive("SetClassAttribute"),
        // caseInsensitive("SetClassAttributeC"),
        // caseInsensitive("SetClassSkills"),
        // caseInsensitive("SetClassSkills2"),
        // caseInsensitive("SetClassSpecialization"),
        // caseInsensitive("SetClimateHasMasser"),
        // caseInsensitive("SetClimateHasMassser"),
        // caseInsensitive("SetClimateHasSecunda"),
        // caseInsensitive("SetClimateMoonPhaseLength"),
        // caseInsensitive("SetClimateSunriseBegin"),
        // caseInsensitive("SetClimateSunriseEnd"),
        // caseInsensitive("SetClimateSunsetBegin"),
        // caseInsensitive("SetClimateSunsetEnd"),
        // caseInsensitive("SetClimateVolatility"),
        // caseInsensitive("SetCloseSound"),
        // caseInsensitive("SetCloudSpeedLower"),
        // caseInsensitive("SetCloudSpeedUpper"),
        // caseInsensitive("SetCombatStyle"),
        // caseInsensitive("SetCombatStyleAcrobaticsDodgeChance"),
        // caseInsensitive("SetCombatStyleAttackChance"),
        // caseInsensitive("SetCombatStyleAttackDuringBlockMult"),
        // caseInsensitive("SetCombatStyleAttackNotUnderAttackMult"),
        // caseInsensitive("SetCombatStyleAttackSkillModBase"),
        // caseInsensitive("SetCombatStyleAttackSkillModMult"),
        // caseInsensitive("SetCombatStyleAttackUnderAttackMult"),
        // caseInsensitive("SetCombatStyleBlockChance"),
        // caseInsensitive("SetCombatStyleBlockNotUnderAttackMult"),
        // caseInsensitive("SetCombatStyleBlockSkillModBase"),
        // caseInsensitive("SetCombatStyleBlockSkillModMult"),
        // caseInsensitive("SetCombatStyleBlockUnderAttackMult"),
        // caseInsensitive("SetCombatStyleBuffStandoffDist"),
        // caseInsensitive("SetCombatStyleDodgeBackNotUnderAttackMult"),
        // caseInsensitive("SetCombatStyleDodgeBackTimerMax"),
        // caseInsensitive("SetCombatStyleDodgeBackTimerMin"),
        // caseInsensitive("SetCombatStyleDodgeBackUnderAttackMult"),
        // caseInsensitive("SetCombatStyleDodgeChance"),
        // caseInsensitive("SetCombatStyleDodgeFWAttackingMult"),
        // caseInsensitive("SetCombatStyleDodgeFWNotAttackingMult"),
        // caseInsensitive("SetCombatStyleDodgeFWTimerMax"),
        // caseInsensitive("SetCombatStyleDodgeFWTimerMin"),
        // caseInsensitive("SetCombatStyleDodgeFatigueModBase"),
        // caseInsensitive("SetCombatStyleDodgeFatigueModMult"),
        // caseInsensitive("SetCombatStyleDodgeLRChance"),
        // caseInsensitive("SetCombatStyleDodgeLRTimerMax"),
        // caseInsensitive("SetCombatStyleDodgeLRTimerMin"),
        // caseInsensitive("SetCombatStyleDodgeNotUnderAttackMult"),
        // caseInsensitive("SetCombatStyleDodgeUnderAttackMult"),
        // caseInsensitive("SetCombatStyleEncumberedSpeedModBase"),
        // caseInsensitive("SetCombatStyleEncumberedSpeedModMult"),
        // caseInsensitive("SetCombatStyleFleeingDisabled"),
        // caseInsensitive("SetCombatStyleGroupStandoffDist"),
        // caseInsensitive("SetCombatStyleH2HBonusToAttack"),
        // caseInsensitive("SetCombatStyleHoldTimerMax"),
        // caseInsensitive("SetCombatStyleHoldTimerMin"),
        // caseInsensitive("SetCombatStyleIdleTimerMax"),
        // caseInsensitive("SetCombatStyleIdleTimerMin"),
        // caseInsensitive("SetCombatStyleIgnoreAlliesInArea"),
        // caseInsensitive("SetCombatStyleKOBonusToAttack"),
        // caseInsensitive("SetCombatStyleKOBonusToPowerAttack"),
        // caseInsensitive("SetCombatStyleMeleeAlertOK"),
        // caseInsensitive("SetCombatStylePowerAttackChance"),
        // caseInsensitive("SetCombatStylePowerAttackFatigueModBase"),
        // caseInsensitive("SetCombatStylePowerAttackFatigueModMult"),
        // caseInsensitive("SetCombatStylePrefersRanged"),
        // caseInsensitive("SetCombatStyleRangeMaxMult"),
        // caseInsensitive("SetCombatStyleRangeOptimalMult"),
        // caseInsensitive("SetCombatStyleRangedStandoffDist"),
        // caseInsensitive("SetCombatStyleRejectsYields"),
        // caseInsensitive("SetCombatStyleRushAttackChance"),
        // caseInsensitive("SetCombatStyleRushAttackDistMult"),
        // caseInsensitive("SetCombatStyleStaggerBonusToAttack"),
        // caseInsensitive("SetCombatStyleStaggerBonusToPowerAttack"),
        // caseInsensitive("SetCombatStyleSwitchDistMelee"),
        // caseInsensitive("SetCombatStyleSwitchDistRanged"),
        // caseInsensitive("SetCombatStyleWillYield"),
        // caseInsensitive("SetContainerRespawns"),
        // caseInsensitive("SetControl"),
        // caseInsensitive("SetCreatureSkill"),
        // caseInsensitive("SetCreatureSoundBase"),
        // caseInsensitive("SetCurrentCharge"),
        // caseInsensitive("SetCurrentHealth"),
        // caseInsensitive("SetCurrentSoulLevel"),
        // caseInsensitive("SetDebugMode"),
        // caseInsensitive("SetDescription"),
        // caseInsensitive("SetDetectionState"),
        // caseInsensitive("SetDisableGlobalCollision"),
        // caseInsensitive("SetDoorTeleport"),
        // caseInsensitive("SetEnchantment"),
        // caseInsensitive("SetEnchantmentCharge"),
        // caseInsensitive("SetEnchantmentCost"),
        // caseInsensitive("SetEnchantmentType"),
        // caseInsensitive("SetEquipmentSlot"),
        // caseInsensitive("SetEquippedCurrentCharge"),
        // caseInsensitive("SetEquippedCurrentHealth"),
        // caseInsensitive("SetEquippedWeaponPoison"),
        // caseInsensitive("SetEventHandler"),
        // caseInsensitive("SetEyes"),
        // caseInsensitive("SetFactionEvil"),
        // caseInsensitive("SetFactionHidden"),
        // caseInsensitive("SetFactionSpecialCombat"),
        // caseInsensitive("SetFemale"),
        // caseInsensitive("SetFemaleBipedPath"),
        // caseInsensitive("SetFemaleGroundPath"),
        // caseInsensitive("SetFemaleIconPath"),
        // caseInsensitive("SetFogDayFar"),
        // caseInsensitive("SetFogDayNear"),
        // caseInsensitive("SetFogNightFar"),
        // caseInsensitive("SetFogNightNear"),
        // caseInsensitive("SetFunctionValue"),
        // caseInsensitive("SetGameDifficulty"),
        // caseInsensitive("SetGoldValue"),
        // caseInsensitive("SetGoldValueT"),
        // caseInsensitive("SetGoldValue_T"),
        // caseInsensitive("SetHDRValue"),
        // caseInsensitive("SetHair"),
        // caseInsensitive("SetHarvested"),
        // caseInsensitive("SetHasBeenPickedUp"),
        // caseInsensitive("SetHidesAmulet"),
        // caseInsensitive("SetHidesRings"),
        // caseInsensitive("SetHotKeyItem"),
        // caseInsensitive("SetIconPath"),
        // caseInsensitive("SetIgnoresResistance"),
        // caseInsensitive("SetIngredient"),
        // caseInsensitive("SetIngredientChance"),
        // caseInsensitive("SetInputText"),
        // caseInsensitive("SetIsAutomaticDoor"),
        // caseInsensitive("SetIsControl"),
        // caseInsensitive("SetIsFood"),
        // caseInsensitive("SetIsHiddenDoor"),
        // caseInsensitive("SetIsMinimalUseDoor"),
        // caseInsensitive("SetIsOblivionGate"),
        // caseInsensitive("SetIsPlayable"),
        // caseInsensitive("SetLightDuration"),
        // caseInsensitive("SetLightRGB"),
        // caseInsensitive("SetLightRadius"),
        // caseInsensitive("SetLightningFrequency"),
        // caseInsensitive("SetLocalGravity"),
        // caseInsensitive("SetLocalGravityVector"),
        // caseInsensitive("SetLoopSound"),
        // caseInsensitive("SetLowLevelProcessing"),
        // caseInsensitive("SetMPSpell"),
        // caseInsensitive("SetMagicEffectAreaSound"),
        // caseInsensitive("SetMagicEffectAreaSoundC"),
        // caseInsensitive("SetMagicEffectBarterFactor"),
        // caseInsensitive("SetMagicEffectBarterFactorC"),
        // caseInsensitive("SetMagicEffectBaseCost"),
        // caseInsensitive("SetMagicEffectBaseCostC"),
        // caseInsensitive("SetMagicEffectBoltSound"),
        // caseInsensitive("SetMagicEffectBoltSoundC"),
        // caseInsensitive("SetMagicEffectCanRecover"),
        // caseInsensitive("SetMagicEffectCanRecoverC"),
        // caseInsensitive("SetMagicEffectCastingSound"),
        // caseInsensitive("SetMagicEffectCastingSoundC"),
        // caseInsensitive("SetMagicEffectCounters"),
        // caseInsensitive("SetMagicEffectCountersC"),
        // caseInsensitive("SetMagicEffectEnchantFactor"),
        // caseInsensitive("SetMagicEffectEnchantFactorC"),
        // caseInsensitive("SetMagicEffectEnchantShader"),
        // caseInsensitive("SetMagicEffectEnchantShaderC"),
        // caseInsensitive("SetMagicEffectFXPersists"),
        // caseInsensitive("SetMagicEffectFXPersistsC"),
        // caseInsensitive("SetMagicEffectForEnchanting"),
        // caseInsensitive("SetMagicEffectForEnchantingC"),
        // caseInsensitive("SetMagicEffectForSpellmaking"),
        // caseInsensitive("SetMagicEffectForSpellmakingC"),
        // caseInsensitive("SetMagicEffectHitShader"),
        // caseInsensitive("SetMagicEffectHitShaderC"),
        // caseInsensitive("SetMagicEffectHitSound"),
        // caseInsensitive("SetMagicEffectHitSoundC"),
        // caseInsensitive("SetMagicEffectIcon"),
        // caseInsensitive("SetMagicEffectIconC"),
        // caseInsensitive("SetMagicEffectIsDetrimental"),
        // caseInsensitive("SetMagicEffectIsDetrimentalC"),
        // caseInsensitive("SetMagicEffectIsHostile"),
        // caseInsensitive("SetMagicEffectIsHostileC"),
        // caseInsensitive("SetMagicEffectLight"),
        // caseInsensitive("SetMagicEffectLightC"),
        // caseInsensitive("SetMagicEffectMagnitudePercent"),
        // caseInsensitive("SetMagicEffectMagnitudePercentC"),
        // caseInsensitive("SetMagicEffectModel"),
        // caseInsensitive("SetMagicEffectModelC"),
        // caseInsensitive("SetMagicEffectName"),
        // caseInsensitive("SetMagicEffectNameC"),
        // caseInsensitive("SetMagicEffectNoArea"),
        // caseInsensitive("SetMagicEffectNoAreaC"),
        // caseInsensitive("SetMagicEffectNoDuration"),
        // caseInsensitive("SetMagicEffectNoDurationC"),
        // caseInsensitive("SetMagicEffectNoHitEffect"),
        // caseInsensitive("SetMagicEffectNoHitEffectC"),
        // caseInsensitive("SetMagicEffectNoIngredient"),
        // caseInsensitive("SetMagicEffectNoIngredientC"),
        // caseInsensitive("SetMagicEffectNoMagnitude"),
        // caseInsensitive("SetMagicEffectNoMagnitudeC"),
        // caseInsensitive("SetMagicEffectOnSelfAllowed"),
        // caseInsensitive("SetMagicEffectOnSelfAllowedC"),
        // caseInsensitive("SetMagicEffectOnTargetAllowed"),
        // caseInsensitive("SetMagicEffectOnTargetAllowedC"),
        // caseInsensitive("SetMagicEffectOnTouchAllowed"),
        // caseInsensitive("SetMagicEffectOnTouchAllowedC"),
        // caseInsensitive("SetMagicEffectOtherActorValue"),
        // caseInsensitive("SetMagicEffectOtherActorValueC"),
        // caseInsensitive("SetMagicEffectProjectileSpeed"),
        // caseInsensitive("SetMagicEffectProjectileSpeedC"),
        // caseInsensitive("SetMagicEffectResistValue"),
        // caseInsensitive("SetMagicEffectResistValueC"),
        // caseInsensitive("SetMagicEffectSchool"),
        // caseInsensitive("SetMagicEffectSchoolC"),
        // caseInsensitive("SetMagicEffectUsedObject"),
        // caseInsensitive("SetMagicEffectUsedObjectC"),
        // caseInsensitive("SetMagicEffectUsesActorValue"),
        // caseInsensitive("SetMagicEffectUsesActorValueC"),
        // caseInsensitive("SetMagicEffectUsesArmor"),
        // caseInsensitive("SetMagicEffectUsesArmorC"),
        // caseInsensitive("SetMagicEffectUsesAttribute"),
        // caseInsensitive("SetMagicEffectUsesAttributeC"),
        // caseInsensitive("SetMagicEffectUsesCreature"),
        // caseInsensitive("SetMagicEffectUsesCreatureC"),
        // caseInsensitive("SetMagicEffectUsesSkill"),
        // caseInsensitive("SetMagicEffectUsesSkillC"),
        // caseInsensitive("SetMagicEffectUsesWeapon"),
        // caseInsensitive("SetMagicEffectUsesWeaponC"),
        // caseInsensitive("SetMagicItemAutoCalc"),
        // caseInsensitive("SetMagicProjectileSpell"),
        // caseInsensitive("SetMaleBipedPath"),
        // caseInsensitive("SetMaleGroundPath"),
        // caseInsensitive("SetMaleIconPath"),
        // caseInsensitive("SetMapMarkerType"),
        // caseInsensitive("SetMapMarkerVisible"),
        // caseInsensitive("SetMenuFloatValue"),
        // caseInsensitive("SetMenuStringValue"),
        // caseInsensitive("SetMerchantContainer"),
        // caseInsensitive("SetMessageIcon"),
        // caseInsensitive("SetMessageSound"),
        // caseInsensitive("SetModLocalData"),
        // caseInsensitive("SetModelPath"),
        // caseInsensitive("SetMouseSpeedX"),
        // caseInsensitive("SetMouseSpeedY"),
        // caseInsensitive("SetName"),
        // caseInsensitive("SetNameEx"),
        // caseInsensitive("SetNoPersuasion"),
        // caseInsensitive("SetNthAEMagnitude"),
        // caseInsensitive("SetNthActiveEffectMagnitude"),
        // caseInsensitive("SetNthEIAV"),
        // caseInsensitive("SetNthEIAVC"),
        // caseInsensitive("SetNthEIArea"),
        // caseInsensitive("SetNthEIDuration"),
        // caseInsensitive("SetNthEIMagnitude"),
        // caseInsensitive("SetNthEIRange"),
        // caseInsensitive("SetNthEISHostile"),
        // caseInsensitive("SetNthEISName"),
        // caseInsensitive("SetNthEISSchool"),
        // caseInsensitive("SetNthEISVisualEffect"),
        // caseInsensitive("SetNthEISVisualEffectC"),
        // caseInsensitive("SetNthEIScript"),
        // caseInsensitive("SetNthEffectItemActorValue"),
        // caseInsensitive("SetNthEffectItemActorValueC"),
        // caseInsensitive("SetNthEffectItemArea"),
        // caseInsensitive("SetNthEffectItemDuration"),
        // caseInsensitive("SetNthEffectItemMagnitude"),
        // caseInsensitive("SetNthEffectItemRange"),
        // caseInsensitive("SetNthEffectItemScript"),
        // caseInsensitive("SetNthEffectItemScriptHostile"),
        // caseInsensitive("SetNthEffectItemScriptName"),
        // caseInsensitive("SetNthEffectItemScriptNameEX"),
        // caseInsensitive("SetNthEffectItemScriptSchool"),
        // caseInsensitive("SetNthEffectItemScriptVisualEffect"),
        // caseInsensitive("SetNthEffectItemScriptVisualEffectC"),
        // caseInsensitive("SetNthFactionRankNameEX"),
        // caseInsensitive("SetNumericGameSetting"),
        // caseInsensitive("SetNumericINISetting"),
        // caseInsensitive("SetOLMPGrids"),
        // caseInsensitive("SetObjectCharge"),
        // caseInsensitive("SetObjectHealth"),
        // caseInsensitive("SetOffersApparatus"),
        // caseInsensitive("SetOffersArmor"),
        // caseInsensitive("SetOffersBooks"),
        // caseInsensitive("SetOffersClothing"),
        // caseInsensitive("SetOffersIngredients"),
        // caseInsensitive("SetOffersLights"),
        // caseInsensitive("SetOffersMagicItems"),
        // caseInsensitive("SetOffersMiscItems"),
        // caseInsensitive("SetOffersPotions"),
        // caseInsensitive("SetOffersRecharging"),
        // caseInsensitive("SetOffersRepair"),
        // caseInsensitive("SetOffersServicesC"),
        // caseInsensitive("SetOffersSpells"),
        // caseInsensitive("SetOffersTraining"),
        // caseInsensitive("SetOffersWeapons"),
        // caseInsensitive("SetOpenKey"),
        // caseInsensitive("SetOpenSound"),
        // caseInsensitive("SetOwnership_T"),
        // caseInsensitive("SetPCAMurderer"),
        // caseInsensitive("SetPCAttributeBonus"),
        // caseInsensitive("SetPCAttributeBonusC"),
        // caseInsensitive("SetPCLevelOffset"),
        // caseInsensitive("SetPCMajorSkillUps"),
        // caseInsensitive("SetPCTrainingSessionsUsed"),
        // caseInsensitive("SetPackageAllowFalls"),
        // caseInsensitive("SetPackageAllowSwimming"),
        // caseInsensitive("SetPackageAlwaysRun"),
        // caseInsensitive("SetPackageAlwaysSneak"),
        // caseInsensitive("SetPackageArmorUnequipped"),
        // caseInsensitive("SetPackageContinueIfPCNear"),
        // caseInsensitive("SetPackageData"),
        // caseInsensitive("SetPackageDefensiveCombat"),
        // caseInsensitive("SetPackageLocationData"),
        // caseInsensitive("SetPackageLockDoorsAtEnd"),
        // caseInsensitive("SetPackageLockDoorsAtLocation"),
        // caseInsensitive("SetPackageLockDoorsAtStart"),
        // caseInsensitive("SetPackageMustComplete"),
        // caseInsensitive("SetPackageMustReachLocation"),
        // caseInsensitive("SetPackageNoIdleAnims"),
        // caseInsensitive("SetPackageOffersServices"),
        // caseInsensitive("SetPackageOncePerDay"),
        // caseInsensitive("SetPackageScheduleData"),
        // caseInsensitive("SetPackageSkipFalloutBehavior"),
        // caseInsensitive("SetPackageTarget"),
        // caseInsensitive("SetPackageTargetData"),
        // caseInsensitive("SetPackageUnlockDoorsAtEnd"),
        // caseInsensitive("SetPackageUnlockDoorsAtLocation"),
        // caseInsensitive("SetPackageUnlockDoorsAtStart"),
        // caseInsensitive("SetPackageUseHorse"),
        // caseInsensitive("SetPackageWeaponsUnequipped"),
        // caseInsensitive("SetPathNodeDisabled"),
        // caseInsensitive("SetPlayerProjectile"),
        // caseInsensitive("SetPlayerSkeletonPath"),
        // caseInsensitive("SetPlayerSkillAdvances"),
        // caseInsensitive("SetPlayerSkillAdvancesC"),
        // caseInsensitive("SetPlayersLastRiddenHorse"),
        // caseInsensitive("SetPos_T"),
        // caseInsensitive("SetPowerTimer"),
        // caseInsensitive("SetProjectileSource"),
        // caseInsensitive("SetProjectileSpeed"),
        // caseInsensitive("SetQuality"),
        // caseInsensitive("SetQuestItem"),
        // caseInsensitive("SetRaceAlias"),
        // caseInsensitive("SetRacePlayable"),
        // caseInsensitive("SetRaceScale"),
        // caseInsensitive("SetRaceVoice"),
        // caseInsensitive("SetRaceWeight"),
        // caseInsensitive("SetRefCount"),
        // caseInsensitive("SetRefEssential"),
        // caseInsensitive("SetScaleEx"),
        // caseInsensitive("SetScript"),
        // caseInsensitive("SetSigilStoneUses"),
        // caseInsensitive("SetSkillGoverningAttribute"),
        // caseInsensitive("SetSkillGoverningAttributeC"),
        // caseInsensitive("SetSkillSpecialization"),
        // caseInsensitive("SetSkillUseIncrement"),
        // caseInsensitive("SetSkillUseIncrementC"),
        // caseInsensitive("SetSoulGemCapacity"),
        // caseInsensitive("SetSoulLevel"),
        // caseInsensitive("SetSpellAreaEffectIgnoresLOS"),
        // caseInsensitive("SetSpellDisallowAbsorbReflect"),
        // caseInsensitive("SetSpellExplodesWithNoTarget"),
        // caseInsensitive("SetSpellHostile"),
        // caseInsensitive("SetSpellImmuneToSilence"),
        // caseInsensitive("SetSpellMagickaCost"),
        // caseInsensitive("SetSpellMasteryLevel"),
        // caseInsensitive("SetSpellPCStart"),
        // caseInsensitive("SetSpellScriptEffectAlwaysApplies"),
        // caseInsensitive("SetSpellType"),
        // caseInsensitive("SetStringGameSettingEX"),
        // caseInsensitive("SetSummonable"),
        // caseInsensitive("SetSunDamage"),
        // caseInsensitive("SetSunGlare"),
        // caseInsensitive("SetTaken"),
        // caseInsensitive("SetTextInputControlHandler"),
        // caseInsensitive("SetTextInputDefaultControlsDisabled"),
        // caseInsensitive("SetTexturePath"),
        // caseInsensitive("SetTimeLeft"),
        // caseInsensitive("SetTrainerLevel"),
        // caseInsensitive("SetTrainerSkill"),
        // caseInsensitive("SetTransDelta"),
        // caseInsensitive("SetTravelHorse"),
        // caseInsensitive("SetUnsafeContainer"),
        // caseInsensitive("SetVelocity"),
        // caseInsensitive("SetVerticalVelocity"),
        // caseInsensitive("SetWeaponReach"),
        // caseInsensitive("SetWeaponSpeed"),
        // caseInsensitive("SetWeaponType"),
        // caseInsensitive("SetWeatherCloudSpeedLower"),
        // caseInsensitive("SetWeatherCloudSpeedUpper"),
        // caseInsensitive("SetWeatherColor"),
        // caseInsensitive("SetWeatherFogDayFar"),
        // caseInsensitive("SetWeatherFogDayNear"),
        // caseInsensitive("SetWeatherFogNightFar"),
        // caseInsensitive("SetWeatherFogNightNear"),
        // caseInsensitive("SetWeatherHDRValue"),
        // caseInsensitive("SetWeatherLightningFrequency"),
        // caseInsensitive("SetWeatherSunDamage"),
        // caseInsensitive("SetWeatherSunGlare"),
        // caseInsensitive("SetWeatherTransDelta"),
        // caseInsensitive("SetWeatherWindSpeed"),
        // caseInsensitive("SetWeight"),
        // caseInsensitive("SetWindSpeed"),
        // caseInsensitive("Sin"),
        // caseInsensitive("Sinh"),
        // caseInsensitive("SquareRoot"),
        // caseInsensitive("Tan"),
        // caseInsensitive("Tanh"),
        // caseInsensitive("TapControl"),
        // caseInsensitive("TapKey"),
        // caseInsensitive("TestExpr"),
        // caseInsensitive("ToLower"),
        // caseInsensitive("ToNumber"),
        // caseInsensitive("ToString"),
        // caseInsensitive("ToUpper"),
        // caseInsensitive("ToggleCreatureModel"),
        // caseInsensitive("ToggleFirstPerson"),
        // caseInsensitive("ToggleSkillPerk"),
        // caseInsensitive("ToggleSpecialAnim"),
        // caseInsensitive("TriggerPlayerSkillUse"),
        // caseInsensitive("TriggerPlayerSkillUseC"),
        // caseInsensitive("TypeOf"),
        // caseInsensitive("UnHammerKey"),
        // caseInsensitive("UncompleteQuest"),
        // caseInsensitive("UnequipItemNS"),
        // caseInsensitive("UnequipItemSilent"),
        // caseInsensitive("UnequipMe"),
        // caseInsensitive("Update3D"),
        // caseInsensitive("UpdateTextInput"),
        // caseInsensitive("VecMag"),
        // caseInsensitive("VecNorm"),
        // caseInsensitive("VectorCross"),
        // caseInsensitive("VectorDot"),
        // caseInsensitive("VectorMagnitude"),
        // caseInsensitive("VectorNormalize"),
        // caseInsensitive("ZeroMat"),
        // caseInsensitive("sqrt"),
        // caseInsensitive("ar_Append"),
        // caseInsensitive("ar_BadNumericIndex"),
        // caseInsensitive("ar_BadStringIndex"),
        // caseInsensitive("ar_Construct"),
        // caseInsensitive("ar_Copy"),
        // caseInsensitive("ar_CustomSort"),
        // caseInsensitive("ar_DeepCopy"),
        // caseInsensitive("ar_Dump"),
        // caseInsensitive("ar_DumpID"),
        // caseInsensitive("ar_Erase"),
        // caseInsensitive("ar_Find"),
        // caseInsensitive("ar_First"),
        // caseInsensitive("ar_HasKey"),
        // caseInsensitive("ar_Insert"),
        // caseInsensitive("ar_InsertRange"),
        // caseInsensitive("ar_Keys"),
        // caseInsensitive("ar_Last"),
        // caseInsensitive("ar_List"),
        // caseInsensitive("ar_Map"),
        // caseInsensitive("ar_Next"),
        // caseInsensitive("ar_Null"),
        // caseInsensitive("ar_Prev"),
        // caseInsensitive("ar_Range"),
        // caseInsensitive("ar_Resize"),
        // caseInsensitive("ar_Size"),
        // caseInsensitive("ar_Sort"),
        // caseInsensitive("ar_SortAlpha"),
        // caseInsensitive("sv_ToLower"),
        // caseInsensitive("sv_ToUpper"),
        // caseInsensitive("sv_Compare"),
        // caseInsensitive("sv_Construct"),
        // caseInsensitive("sv_Count"),
        // caseInsensitive("sv_Destruct"),
        // caseInsensitive("sv_Erase"),
        // caseInsensitive("sv_Find"),
        // caseInsensitive("sv_Insert"),
        // caseInsensitive("sv_Length"),
        // caseInsensitive("sv_Percentify"),
        // caseInsensitive("sv_Replace"),
        // caseInsensitive("sv_Split"),
        // caseInsensitive("sv_ToNumeric"),
        // caseInsensitive("GetAllSkills"),
        // caseInsensitive("GetAVSkillMasteryLevelC"),
        // caseInsensitive("GetAVSkillMasteryLevelF"),
        // caseInsensitive("GetFontLoaded"),
        // caseInsensitive("GetGenericButtonPressed"),
        // caseInsensitive("GetLoadedFonts"),
        // caseInsensitive("GetLocalMapSeen"),
        // caseInsensitive("GetMenuEventType"),
        // caseInsensitive("GetMenuFloatValue"),
        // caseInsensitive("GetMenuStringValue"),
        // caseInsensitive("GetMouseImage"),
        // caseInsensitive("GetMousePos"),
        // caseInsensitive("GetPlayerSkillAdvancesF"),
        // caseInsensitive("GetPlayerSkillUseF"),
        // caseInsensitive("GetRequiredSkillExpC"),
        // caseInsensitive("GetRequiredSkillExpF"),
        // caseInsensitive("GetSkillCode"),
        // caseInsensitive("GetSkillForm"),
        // caseInsensitive("GetSkillGoverningAttributeF"),
        // caseInsensitive("GetSkillSpecializationC"),
        // caseInsensitive("GetSkillSpecializationF"),
        // caseInsensitive("GetSkillUseIncrementF"),
        // caseInsensitive("GetTextEditBox"),
        // caseInsensitive("GetTextEditString"),
        // caseInsensitive("GetTrainingMenuCost"),
        // caseInsensitive("GetTrainingMenuLevel"),
        // caseInsensitive("GetTrainingMenuSkill"),
        // caseInsensitive("GetWorldMapData"),
        // caseInsensitive("GetWorldMapDoor"),
        // caseInsensitive("IncrementPlayerSkillUseF"),
        // caseInsensitive("InsertXML"),
        // caseInsensitive("InsertXMLTemplate"),
        // caseInsensitive("IsTextEditInUse"),
        // caseInsensitive("Kyoma_Test"),
        // caseInsensitive("ModPlayerSkillExpF"),
        // caseInsensitive("mqCreateMenuFloatValue"),
        // caseInsensitive("mqCreateMenuStringValue"),
        // caseInsensitive("mqGetActiveQuest"),
        // caseInsensitive("mqGetActiveQuestTargets"),
        // caseInsensitive("mqGetCompletedQuests"),
        // caseInsensitive("mqGetCurrentQuests"),
        // caseInsensitive("mqGetEnchMenuBaseItem"),
        // caseInsensitive("mqGetHighlightedClass"),
        // caseInsensitive("mqGetMapMarkers"),
        // caseInsensitive("mqGetMenuActiveChildIndex"),
        // caseInsensitive("mqGetMenuActiveFloatValue"),
        // caseInsensitive("mqGetMenuActiveStringValue"),
        // caseInsensitive("mqGetMenuChildCount"),
        // caseInsensitive("mqGetMenuChildFloatValue"),
        // caseInsensitive("mqGetMenuChildHasTrait"),
        // caseInsensitive("mqGetMenuChildName"),
        // caseInsensitive("mqGetMenuChildStringValue"),
        // caseInsensitive("mqGetMenuGlobalFloatValue"),
        // caseInsensitive("mqGetMenuGlobalStringValue"),
        // caseInsensitive("mqGetQuestCompleted"),
        // caseInsensitive("mqGetSelectedClass"),
        // caseInsensitive("mqSetActiveQuest"),
        // caseInsensitive("mqSetMenuActiveFloatValue"),
        // caseInsensitive("mqSetMenuActiveStringValue"),
        // caseInsensitive("mqSetMenuChildFloatValue"),
        // caseInsensitive("mqSetMenuChildStringValue"),
        // caseInsensitive("mqSetMenuGlobalStringValue"),
        // caseInsensitive("mqSetMenuGlobalFloatValue"),
        // caseInsensitive("mqSetMessageBoxSource"),
        // caseInsensitive("mqUncompleteQuest"),
        // caseInsensitive("RemoveMenuEventHandler"),
        // caseInsensitive("SetMenuEventHandler"),
        // caseInsensitive("SetMouseImage"),
        // caseInsensitive("SetPlayerSkillAdvancesF"),
        // caseInsensitive("SetSkillGoverningAttributeF"),
        // caseInsensitive("SetSkillSpecializationC"),
        // caseInsensitive("SetSkillSpecializationF"),
        // caseInsensitive("SetSkillUseIncrementF"),
        // caseInsensitive("SetTextEditString"),
        // caseInsensitive("SetTrainerSkillC"),
        // caseInsensitive("SetWorldMapData"),
        // caseInsensitive("ShowGenericMenu"),
        // caseInsensitive("ShowLevelUpMenu"),
        // caseInsensitive("ShowMagicPopupMenu"),
        // caseInsensitive("ShowTextEditMenu"),
        // caseInsensitive("ShowTrainingMenu"),
        // caseInsensitive("tile_FadeFloat"),
        // caseInsensitive("tile_GetFloat"),
        // caseInsensitive("tile_GetInfo"),
        // caseInsensitive("tile_GetName"),
        // caseInsensitive("tile_GetString"),
        // caseInsensitive("tile_GetVar"),
        // caseInsensitive("tile_HasTrait"),
        // caseInsensitive("tile_SetFloat"),
        // caseInsensitive("tile_SetString"),
        // caseInsensitive("TriggerPlayerSkillUseF"),
        // caseInsensitive("UpdateLocalMap"),
      ),
      field("argument", repeat($._operands)),
      optional($._eol),
    ),

    identifier: $ => /[a-zA-Z_]\w*/,
    comment: $ => seq(
      ';',
      /(\\(.|\r?\n)|[^\\\n])*/
    ),
    _eol: $ => '\n',
  }
});
module.exports.PREC = PREC

function caseInsensitive (word, aliasAsWord = true) {
  let pattern = ''
  for (const letter of word) {
    pattern += `[${letter}${letter.toLocaleUpperCase()}]`
  }
  let result = new RegExp(pattern)
  // let result = new RegExp(keyword
  //   .split('')
  //   .map(l => l !== l.toUpperCase() ? `[${l}${l.toUpperCase()}]` : l)
  //   .join('')
  // )
  if (aliasAsWord) result = alias(result, word)
  return result
}
