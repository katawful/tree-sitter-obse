================================================================================
Let assignment
================================================================================
scn scriptname
begin gamemode
  let x := y
end
--------------------------------------------------------------------------------

(script_file
  script_name: (script_name
    declaration: (script_declarator)
    script_name: (identifier))
  block_mode: (block
    let: (let_statement
      variable: (identifier)
      assignment: (assignment)
      plain: (identifier))))

================================================================================
Let expression
================================================================================
scn scriptname
begin gamemode
  let iTemp := ((iSpellSize) - (Rand 0 iSpellSize))
  let x := y + x
end
--------------------------------------------------------------------------------

(script_file
  script_name: (script_name
    declaration: (script_declarator)
    script_name: (identifier))
  block_mode: (block
    (ERROR)
    let: (let_statement
      variable: (identifier)
      assignment: (assignment)
      plain: (identifier)
      (binary_operator)
      function: (function)
      integer: (integer)
      plain: (identifier))
    let: (let_statement
      variable: (identifier)
      assignment: (assignment)
      plain: (identifier))))

================================================================================
Let compound
================================================================================
scn scriptname
begin gamemode
  let x += 1
  let x -= 1
  let x *= 1
  let x /= 1
  let x ^= 1
end
--------------------------------------------------------------------------------

(script_file
  script_name: (script_name
    declaration: (script_declarator)
    script_name: (identifier))
  block_mode: (block
    (ERROR)
    let: (let_statement
      variable: (identifier)
      compound: (compound_assignment)
      integer: (integer))
    let: (let_statement
      variable: (identifier)
      compound: (compound_assignment)
      integer: (integer))
    let: (let_statement
      variable: (identifier)
      compound: (compound_assignment)
      integer: (integer))
    let: (let_statement
      variable: (identifier)
      compound: (compound_assignment)
      integer: (integer))
    let: (let_statement
      variable: (identifier)
      compound: (compound_assignment)
      integer: (integer))))
