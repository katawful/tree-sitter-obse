=============
Set statement
=============
scn scriptname
begin blockmode
  set x to y
end
---
(script_file
  script_name: (script_name
    declaration: (script_declarator)
    script_name: (identifier))
    block_mode: (block
      block_type: (identifier)
      set: (set_statement
        left: (operands
          plain: (identifier))
        right: (operands
          plain: (identifier)))))

=============
Let statement
=============
scn scriptname
begin blockmode
  let x := y
  let iRand := (Rand 0 20)
  let x := "Data\-*"
  let x->y := "Data\-*"
end
---
(script_file
  script_name: (script_name
    declaration: (script_declarator)
    script_name: (identifier))
    block_mode: (block
      block_type: (identifier)
      let: (let_statement
        left: (operands
          plain: (identifier))
        assignment: (assignment)
        right: (operands
          plain: (identifier)))
      let: (let_statement
        left: (operands
          plain: (identifier))
        assignment: (assignment)
        (operands
          function: (identifier)
          argument: (literal)
          argument: (literal)))
      let: (let_statement
        left: (operands
          plain: (identifier))
        assignment: (assignment)
        right: (operands
            literal: (literal)))
      let: (let_statement
        left: (operands
          array_var: (array_variable
            array: (identifier)
            member_access: (mem_access
              (identifier))))
        assignment: (assignment)
        right: (operands
          literal: (literal)))))
